<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:description_2="http://www.eclipse.org/sirius/diagram/sequence/description/2.0.0" xmlns:description_3="http://www.eclipse.org/sirius/table/description/1.1.0" xmlns:properties="http://www.eclipse.org/sirius/properties/1.0.0" xmlns:properties-ext-widgets-reference="http://www.eclipse.org/sirius/properties/1.0.0/ext/widgets/reference" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/description/tool/1.1.0" xmlns:tool_2="http://www.eclipse.org/sirius/diagram/sequence/description/tool/2.0.0" name="requirementmodel" version="12.0.0.2017041100">
  <ownedViewpoints name="EdgeCloudModel" modelFileExtension="ecmodel">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="Use Case Diagram" domainClass="eCModel.UseCaseModel" enablePopupBars="true">
      <layout xsi:type="description_1:CompositeLayout" direction="LeftToRight"/>
      <defaultLayer name="Default">
        <nodeMappings name="Actor" labelDirectEdit="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Edit%20Label']" doubleClickDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='openEEFUCD']" domainClass="eCModel.Actor">
          <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql: if self.label = null then &#xD;self.name&#xD;else &#xD;self.label.substring(2,self.label.size()-1) &#xD;endif" resizeKind="NSEW" arcWidth="1" arcHeight="1" workspacePath="/net.mydreamy.requirementmodel.design/images/actor.svg">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
          </style>
        </nodeMappings>
        <edgeMappings name="AU_Association" deletionDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='AssociationDelete']" sourceMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@nodeMappings[name='Actor']" targetMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@containerMappings[name='UseCaseModel']/@subNodeMappings[name='UseCase']" targetFinderExpression="feature:uc" reconnections="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='AssociationReconnect']">
          <style targetArrow="NoDecoration" sizeComputationExpression="0.8" endsCentering="Both">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            <centerLabelStyleDescription labelSize="10" showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="Actor_Generalization" deletionDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='GeneralizationDelete']" sourceMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@nodeMappings[name='Actor']" targetMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@nodeMappings[name='Actor']" targetFinderExpression="feature:superActor" reconnections="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='GeneralizationReconnect']">
          <style targetArrow="InputClosedArrow" endsCentering="Both">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="UC_Include" preconditionExpression="aql:self.UCRelation='include'" deletionDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='IncludeDelete']" sourceMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@containerMappings[name='UseCaseModel']/@subNodeMappings[name='UseCase']" targetMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@containerMappings[name='UseCaseModel']/@subNodeMappings[name='UseCase']" targetFinderExpression="feature:relateduc" reconnections="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='IncludeReconnect']">
          <style lineStyle="dash" endsCentering="Both">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false" labelExpression="include">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="UC_Extend" preconditionExpression="aql:self.UCRelation='extend'" deletionDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='ExtendDelete']" sourceMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@containerMappings[name='UseCaseModel']/@subNodeMappings[name='UseCase']" targetMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@containerMappings[name='UseCaseModel']/@subNodeMappings[name='UseCase']" targetFinderExpression="feature:relateduc" reconnections="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='ExtendReconnect']">
          <style lineStyle="dash" endsCentering="Both">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            <centerLabelStyleDescription labelSize="9" showIcon="false" labelExpression="extend">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="UseCaseModel" domainClass="eCModel.UseCaseModel">
          <subNodeMappings name="UseCase" doubleClickDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='openSSD']" domainClass="eCModel.UC">
            <style xsi:type="style:EllipseNodeDescription" labelSize="13" showIcon="false" labelExpression="aql: if self.label = null then &#xD;self.name&#xD;else &#xD;self.label.substring(2,self.label.size()-1) &#xD;endif" labelPosition="node" resizeKind="NSEW" horizontalDiameterComputationExpression="15" verticalDiameterComputationExpression="7">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="20" showIcon="false" labelExpression="aql: if self.label = null then self.name else self.label.substring(2,self.label.size()-1) endif">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <toolSections name="Elements">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Actor" nodeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@nodeMappings[name='Actor']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Actor" referenceName="actor">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'Actor'+container.actor->filter(eCModel::Actor)->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="UseCase" nodeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@containerMappings[name='UseCaseModel']/@subNodeMappings[name='UseCase']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.UC" referenceName="uc">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'usecase'+container.uc->filter(eCModel::UC)->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="Edit Label">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:0"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Relations">
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Association" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@edgeMappings[name='AU_Association']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:target">
                <subModelOperations xsi:type="tool_1:MoveElement" newContainerExpression="var:source" featureName="uc"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="GeneralizationCreate" precondition="aql:preTarget.differs(preSource)" edgeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@edgeMappings[name='Actor_Generalization']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="superActor" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Include" precondition="aql:preTarget.differs(preSource)" edgeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@edgeMappings[name='UC_Include']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="relateduc" valueExpression="var:target"/>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="UCRelation" valueExpression="include"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="Extend" precondition="aql:preTarget.differs(preSource)" edgeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@edgeMappings[name='UC_Extend']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="relateduc" valueExpression="var:target"/>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="UCRelation" valueExpression="extend"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="GeneralizationReconnect">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="superActor" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="ExtendReconnect">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:Unset" featureName="relateduc" elementExpression="var:source"/>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="relateduc" valueExpression="var:target">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="relateduc" valueExpression="var:target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="IncludeReconnect">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:edgeView.targetNode.target.equals(source)">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="relateduc" elementExpression="var:source"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="relateduc" valueExpression="var:target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="AssociationReconnect">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:edgeView.targetNode.target.equals(source)">
                  <subModelOperations xsi:type="tool_1:Unset" featureName="uc" elementExpression="var:source"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="uc" valueExpression="var:target"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="GeneralizationDelete">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:Unset" featureName="superActor"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="IncludeDelete">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="aql:element.relateduc->size()>1">
                    <subModelOperations xsi:type="tool_1:Unset" featureName="relateduc" elementExpression="aql:elementView.targetNode.target"/>
                  </cases>
                  <cases conditionExpression="aql:element.relateduc->size()==1">
                    <subModelOperations xsi:type="tool_1:Unset" featureName="relateduc" elementExpression="aql:elementView.targetNode.target"/>
                    <subModelOperations xsi:type="tool_1:Unset" featureName="UCRelation"/>
                  </cases>
                  <default/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="ExtendDelete" forceRefresh="true">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="aql:element.relateduc->size()>1">
                    <subModelOperations xsi:type="tool_1:Unset" featureName="relateduc" elementExpression="aql:elementView.targetNode.target"/>
                  </cases>
                  <cases conditionExpression="aql:element.relateduc->size()==1">
                    <subModelOperations xsi:type="tool_1:Unset" featureName="relateduc" elementExpression="aql:elementView.targetNode.target"/>
                    <subModelOperations xsi:type="tool_1:Unset" featureName="UCRelation"/>
                  </cases>
                  <default/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="AssociationDelete">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:Unset" featureName="uc" elementExpression="aql:elementView.targetNode.target"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Others">
          <ownedTools xsi:type="tool_1:ExternalJavaAction" name="OpenEmbeddedEditor" label="Open Embedded Editor" forceRefresh="true" id="OpenEmbeddedEditor"/>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="openSSD" forceRefresh="true" mappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@containerMappings[name='UseCaseModel']/@subNodeMappings[name='UseCase']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.ssd->isEmpty()">
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Create System Sequence Diagram">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                      </initialOperation>
                    </buttons>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.eContainer()">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel::Service" referenceName="service" variableName="newService">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:element.name.toUpperFirst() + 'Service'"/>
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="service" valueExpression="var:newService"/>
                            </subModelOperations>
                          </subModelOperations>
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel::Interaction" referenceName="interaction" variableName="newSSD">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:element.name.toUpperFirst() + 'SSD'"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="participants" valueExpression="aql: if element.eInverse(eCModel::Actor)->select(ac | ac.uc->includes(element))->notEmpty() then element.eInverse(eCModel::Actor)->select(ac | ac.uc->includes(element))->including(newService) else element.eInverse(eCModel::UC).eInverse(eCModel::Actor)->select(ac | ac.uc.relateduc->includes(element))->including(newService) endif"/>
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="ssd" valueExpression="aql:newSSD"/>
                            </subModelOperations>
                          </subModelOperations>
                        </firstModelOperations>
                      </initialOperation>
                    </buttons>
                    <page name="OpenSSDPage" labelExpression="Create System Sequence Diagram" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='openSSD']/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                    <groups name="OpenDialogUseCaseGroup" labelExpression="System Sequence Diagram" domainClass="eCModel::UC" semanticCandidateExpression="var:self">
                      <controls xsi:type="properties:TextDescription" name="DialogSSDName" labelExpression="Name:" valueExpression="aql:self.name + 'SSD'">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                            <subModelOperations xsi:type="tool_1:SetValue" valueExpression="var:newValue"/>
                          </firstModelOperations>
                        </initialOperation>
                      </controls>
                      <controls xsi:type="properties:TextDescription" name="DialogServiceName" labelExpression="Service:" valueExpression="aql:self.name + 'Service'">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                        </initialOperation>
                      </controls>
                      <controls xsi:type="properties:ListDescription" name="DialogActorList" labelExpression="Actors:" valueExpression="aql: if self.eInverse(eCModel::Actor)->select(ac | ac.uc->includes(self))->notEmpty() then self.eInverse(eCModel::Actor)->select(ac | ac.uc->includes(self)) else self.eInverse(eCModel::UC).eInverse(eCModel::Actor)->select(ac | ac.uc.relateduc->includes(self)) endif" displayExpression="aql:value.name">
                        <onClickOperation>
                          <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                        </onClickOperation>
                      </controls>
                    </groups>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.ssd->notEmpty()">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.ssd->size() == 1">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.ssd->first()">
                      <subModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']"/>
                    </subModelOperations>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:element.ssd->size() > 1"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:PopupMenu" name="UseCaseSSD" label="System Sequence Diagram for UseCase" precondition="aql:self.oclIsTypeOf(eCModel::UC)">
            <menuItemDescription xsi:type="tool_1:OperationAction" name="CreateSSDAction" label="Create SSD for selected UseCase">
              <view name="views">
                <subVariables xsi:type="tool_1:AcceleoVariable" name="target" computationExpression="aql:views->first().target"/>
              </view>
              <initialOperation/>
            </menuItemDescription>
            <menuItemDescription xsi:type="tool_1:OperationAction" name="OpenSSDAction" label="Open Correspoding SSD">
              <view name="views"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:views">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel::Interaction" referenceName="ssd">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:views.name"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="participants" valueExpression="aql:views.eInverse(eCModel::Actor)->select(ac | ac.uc->includes(views))"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Create System Sequence Diagram">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                      </initialOperation>
                    </buttons>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation>
                        <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainer()">
                          <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel::Interaction" referenceName="interaction" variableName="newSSD">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:target.name"/>
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="participants" valueExpression="aql:target.eInverse(eCModel::Actor)->select(ac | ac.uc->includes(target))"/>
                            <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:target">
                              <subModelOperations xsi:type="tool_1:SetValue" featureName="ssd" valueExpression="aql:newSSD"/>
                            </subModelOperations>
                          </subModelOperations>
                        </firstModelOperations>
                      </initialOperation>
                    </buttons>
                    <page name="OpenSSDPage" labelExpression="Create System Sequence Diagram" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='UseCaseSSD']/@menuItemDescription.1/@initialOperation/@firstModelOperations/@subModelOperations.1/@groups.0"/>
                    <groups name="OpenDialogUseCaseGroup" labelExpression="System Sequence Diagram" domainClass="eCModel::UC" semanticCandidateExpression="var:self">
                      <controls xsi:type="properties:TextDescription" name="DialogUseCase" labelExpression="Name:" valueExpression="aql:self.name">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                        </initialOperation>
                      </controls>
                      <controls xsi:type="properties:ListDescription" name="DialogActorList" labelExpression="Actors:" valueExpression="aql:self.eInverse(eCModel::Actor)->select(ac | ac.uc->includes(self))" displayExpression="aql:value.name">
                        <onClickOperation>
                          <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                        </onClickOperation>
                      </controls>
                    </groups>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </menuItemDescription>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="openEEFUCD" forceRefresh="true" mappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@nodeMappings[name='Actor'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ExternalJavaAction" name="Open EEF Wizard Action" id="org.eclipse.sirius.eef.actions.openPropertiesWizard"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="Conceptual Class Diagram" domainClass="eCModel.DomainModel" enablePopupBars="true">
      <defaultLayer name="Default">
        <edgeMappings name="EntityReference" preconditionExpression="aql:self.isReverseAssoication==false" doubleClickDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='openCCDEEF']" sourceMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']" targetMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']" targetFinderExpression="feature:entity" sourceFinderExpression="aql:self.eContainer()" targetExpression="var:self" domainClass="eCModel.Reference" useDomainElement="true" reconnections="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='entityAssociationReconnect']">
          <conditionnalStyles predicateExpression="aql:self.ismultiple=true and self.type='Association'">
            <style targetArrow="NoDecoration" sizeComputationExpression="0.5">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <beginLabelStyleDescription showIcon="false" labelExpression="aql:let ref = self.eCrossReferences().reference->any(r | r.eCrossReferences()->last().name == self.eContainer().name) in if self.eCrossReferences()->excludes(self.eContainer()) and ref.isReverseAssoication == true then (if ref.ismultiple == true then ref.name + ':*' else ref.name + ':1' endif) else '' endif">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </beginLabelStyleDescription>
              <endLabelStyleDescription showIcon="false" labelExpression="aql:self.name + ':*'">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </endLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.ismultiple=false and self.type='Association'">
            <style targetArrow="NoDecoration" sizeComputationExpression="0.5">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <beginLabelStyleDescription showIcon="false" labelExpression="aql:let ref = self.eCrossReferences().reference->any(r | r.eCrossReferences()->last().name == self.eContainer().name) in if self.eCrossReferences()->excludes(self.eContainer()) and ref.isReverseAssoication == true then (if ref.ismultiple == true then ref.name + ':*' else ref.name + ':1' endif) else '' endif">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </beginLabelStyleDescription>
              <endLabelStyleDescription showIcon="false" labelExpression="aql:self.name + ':1'">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </endLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.type='Aggregation'">
            <style sourceArrow="Diamond" targetArrow="NoDecoration" sizeComputationExpression="0.5">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <beginLabelStyleDescription showIcon="false" labelExpression="aql:  let ref = self.eCrossReferences().reference->any(r | r.eCrossReferences()->last().name == self.eContainer().name) in if self.eCrossReferences()->excludes(self.eContainer()) and ref.isReverseAssoication == true then (if ref.ismultiple == true then ref.name + ':1...*' else ref.name + ':1' endif) else '' endif">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </beginLabelStyleDescription>
              <endLabelStyleDescription showIcon="false" labelExpression="aql:self.name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </endLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.type='Composition'">
            <style sourceArrow="FillDiamond" targetArrow="NoDecoration" sizeComputationExpression="0.5">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <beginLabelStyleDescription showIcon="false" labelExpression="aql:  let ref = self.eCrossReferences().reference->any(r | r.eCrossReferences()->last().name == self.eContainer().name) in if self.eCrossReferences()->excludes(self.eContainer()) and ref.isReverseAssoication == true then (if ref.ismultiple == true then ref.name + ':1...*' else ref.name + ':1' endif) else '' endif">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </beginLabelStyleDescription>
              <endLabelStyleDescription showIcon="false" labelExpression="aql:self.name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </endLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="SuperEntity" deletionDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='entityGenerationDelete']" sourceMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']" targetMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']" targetFinderExpression="aql:self.superEntity" reconnections="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='entityGenerationReconnect']">
          <style targetArrow="InputClosedArrow" sizeComputationExpression="0.5">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="Entity" deletionDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='']" labelDirectEdit="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='EditEntityLabel']" doubleClickDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Use%20Case%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='openEEFUCD']" domainClass="eCModel.Entity" childrenPresentation="List">
          <subNodeMappings name="LocationType" semanticCandidatesExpression="aql:self.entityLocation" domainClass="eCModel.EntityLocation">
            <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:'«' + self.name + '»'" labelPosition="node" resizeKind="NSEW" width="300" height="20">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="EntityAttribute" labelDirectEdit="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='EditEntityLabel']" semanticCandidatesExpression="aql:self.attributes" doubleClickDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='openSDEEF']" domainClass="eCModel.Attribute">
            <style xsi:type="style:SquareDescription" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
            <conditionnalStyles predicateExpression="aql:self.type.oclIsTypeOf(eCModel::PrimitiveTypeCS)=true">
              <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.name + ' : ' + self.type.name" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW" height="20">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.type.oclIsTypeOf(eCModel::EnumEntity)=true">
              <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.name + ' : ' + self.type.name " labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW" height="20">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </conditionnalStyles>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" widthComputationExpression="10" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </containerMappings>
        <containerMappings name="EnumEntity" labelDirectEdit="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='EditEntityLabel']" semanticCandidatesExpression="aql:let enums = self.eAllContents(eCModel::EnumEntity) in enums.name->asSet()->collect( n | enums->any(e | e.name = n))" domainClass="eCModel.EnumEntity" childrenPresentation="List">
          <subNodeMappings name="EnumItem" labelDirectEdit="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='EditEntityLabel']" semanticCandidatesExpression="feature:eAllContents" domainClass="eCModel.EnumItem">
            <style xsi:type="style:SquareDescription" showIcon="false" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" showIcon="false">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </containerMappings>
        <toolSections name="elementTools" label="Elements">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Entity" label="Class" containerMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Entity" referenceName="entity">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'Entity'+container.entity->filter(eCModel::Entity)->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="EditEntityLabel">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ToolGroup" name="Property">
            <tools xsi:type="tool:NodeCreationDescription" name="Attribute" nodeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']/@subNodeMappings[name='EntityAttribute']" extraMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']/@subNodeMappings[name='EntityAttribute'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@containerMappings[name='EnumEntity'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@containerMappings[name='EnumEntity']/@subNodeMappings[name='EnumItem']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Attribute" referenceName="attributes" variableName="newAttribute">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'Attribute'+container.attributes->filter(eCModel::Attribute)->size()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ismultiple" valueExpression="false"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.PrimitiveTypeCS" referenceName="type" variableName="defaultType">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="String"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:NodeCreationDescription" name="EnumType" label="EnumType" nodeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']/@subNodeMappings[name='EntityAttribute']" extraMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']/@subNodeMappings[name='EntityAttribute'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@containerMappings[name='EnumEntity'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@containerMappings[name='EnumEntity']/@subNodeMappings[name='EnumItem']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Attribute" referenceName="attributes" variableName="newAttribute">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'attribute'+container.attributes->filter(eCModel::Attribute)->size()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ismultiple" valueExpression="false"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.EnumEntity" referenceName="type" variableName="newEnumEntityType">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'EnumEntity' + container.eContainer().eAllContents(eCModel::EnumEntity).name->asSet()->collect( n | container.eContainer().eAllContents(eCModel::EnumEntity)->any(e | e.name = n))->size()"/>
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.EnumItem" referenceName="element" variableName="newEnumItem">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="ENUMITEMS"/>
                        </subModelOperations>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:newEnumEntityType"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
          </ownedTools>
        </toolSections>
        <toolSections name="relationTool" label="Relations">
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="superEntity" label="Generation" precondition="aql:preTarget.differs(preSource)" edgeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@edgeMappings[name='SuperEntity']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="superEntity" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="entityGenerationReconnect">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="superEntity" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="entityGenerationDelete" label="Generation Delete">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:Unset" featureName="superEntity"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="entityAssociationCreate" label="Association" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@edgeMappings[name='EntityReference']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:target">
                <subModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="aql:self.reference->exists( r | r.entity.name = source.name)">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Reference" referenceName="reference">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:source.name + 'to' + target.name"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="entity" valueExpression="var:target"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="ismultiple" valueExpression="false"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="Association"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="isReverseAssoication" valueExpression="true"/>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <default>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Reference" referenceName="reference">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:source.name + 'to' + target.name"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="entity" valueExpression="var:target"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="ismultiple" valueExpression="false"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="Association"/>
                      </subModelOperations>
                    </subModelOperations>
                  </default>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="entityAssociationReconnect">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql:element.entity.reference->any( r | r.entity.name = element.eContainer().name) = null">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="entity" valueExpression="var:target"/>
                  </subModelOperations>
                </cases>
                <default>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.entity.reference->any( r | r.entity.name = element.eContainer().name)">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="isReverseAssoication" valueExpression="false"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="entity" valueExpression="var:target"/>
                    </subModelOperations>
                  </subModelOperations>
                </default>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:For" expression="aql:element.eInverse()->filter(eCModel::Reference)" iteratorName="refer">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Ohters">
          <ownedTools xsi:type="tool:DoubleClickDescription" name="openCCDEEF" forceRefresh="true" mappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@edgeMappings[name='EntityReference']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ExternalJavaAction" name="Open EEF Wizard Action" id="org.eclipse.sirius.eef.actions.openPropertiesWizard"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="Edge Class Diagram" domainClass="eCModel.DomainModel" enablePopupBars="true">
      <defaultLayer name="Default">
        <edgeMappings name="EntityReference" preconditionExpression="aql:self.isReverseAssoication==false" doubleClickDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Edge%20Class%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='openCCDEEF']" sourceMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Edge%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']" targetMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Edge%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']" targetFinderExpression="feature:entity" sourceFinderExpression="aql:self.eContainer()" targetExpression="var:self" domainClass="eCModel.Reference" useDomainElement="true" reconnections="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Edge%20Class%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='entityAssociationReconnect']">
          <conditionnalStyles predicateExpression="aql:self.ismultiple=true and self.type='Association'">
            <style targetArrow="NoDecoration" sizeComputationExpression="0.5">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <beginLabelStyleDescription showIcon="false" labelExpression="aql:let ref = self.eCrossReferences().reference->any(r | r.eCrossReferences()->last().name == self.eContainer().name) in if self.eCrossReferences()->excludes(self.eContainer()) and ref.isReverseAssoication == true then (if ref.ismultiple == true then ref.name + ':*' else ref.name + ':1' endif) else '' endif">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </beginLabelStyleDescription>
              <endLabelStyleDescription showIcon="false" labelExpression="aql:self.name + ':*'">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </endLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.ismultiple=false and self.type='Association'">
            <style targetArrow="NoDecoration" sizeComputationExpression="0.5">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <beginLabelStyleDescription showIcon="false" labelExpression="aql:let ref = self.eCrossReferences().reference->any(r | r.eCrossReferences()->last().name == self.eContainer().name) in if self.eCrossReferences()->excludes(self.eContainer()) and ref.isReverseAssoication == true then (if ref.ismultiple == true then ref.name + ':*' else ref.name + ':1' endif) else '' endif">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </beginLabelStyleDescription>
              <endLabelStyleDescription showIcon="false" labelExpression="aql:self.name + ':1'">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </endLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.type='Aggregation'">
            <style sourceArrow="Diamond" targetArrow="NoDecoration" sizeComputationExpression="0.5">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <beginLabelStyleDescription showIcon="false" labelExpression="aql:  let ref = self.eCrossReferences().reference->any(r | r.eCrossReferences()->last().name == self.eContainer().name) in if self.eCrossReferences()->excludes(self.eContainer()) and ref.isReverseAssoication == true then (if ref.ismultiple == true then ref.name + ':1...*' else ref.name + ':1' endif) else '' endif">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </beginLabelStyleDescription>
              <endLabelStyleDescription showIcon="false" labelExpression="aql:self.name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </endLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.type='Composition'">
            <style sourceArrow="FillDiamond" targetArrow="NoDecoration" sizeComputationExpression="0.5">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <beginLabelStyleDescription showIcon="false" labelExpression="aql:  let ref = self.eCrossReferences().reference->any(r | r.eCrossReferences()->last().name == self.eContainer().name) in if self.eCrossReferences()->excludes(self.eContainer()) and ref.isReverseAssoication == true then (if ref.ismultiple == true then ref.name + ':1...*' else ref.name + ':1' endif) else '' endif">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </beginLabelStyleDescription>
              <endLabelStyleDescription showIcon="false" labelExpression="aql:self.name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </endLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="SuperEntity" deletionDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Edge%20Class%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='entityGenerationDelete']" sourceMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Edge%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']" targetMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Edge%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']" targetFinderExpression="aql:self.superEntity" reconnections="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Edge%20Class%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='entityGenerationReconnect']">
          <style targetArrow="InputClosedArrow" sizeComputationExpression="0.5">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="Entity" deletionDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Edge%20Class%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='']" labelDirectEdit="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Edge%20Class%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='EditEntityLabel']" semanticCandidatesExpression="aql:self.entity->select(i | i.entityLocation.name='Edge' or i.entityLocation.name='Cache')" domainClass="eCModel.Entity" childrenPresentation="List">
          <subNodeMappings name="LocationType" semanticCandidatesExpression="aql:self.entityLocation" domainClass="eCModel.EntityLocation">
            <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:'«' + self.name + '»'" labelPosition="node" resizeKind="NSEW" width="300" height="20">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="EntityAttribute" labelDirectEdit="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Edge%20Class%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='EditEntityLabel']" semanticCandidatesExpression="aql:self.attributes" domainClass="eCModel.Attribute">
            <style xsi:type="style:SquareDescription" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
            <conditionnalStyles predicateExpression="aql:self.type.oclIsTypeOf(eCModel::PrimitiveTypeCS)=true">
              <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.name + ' : ' + self.type.name" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW" height="20">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.type.oclIsTypeOf(eCModel::EnumEntity)=true">
              <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.name + ' : ' + self.type.name " labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW" height="20">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </conditionnalStyles>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" widthComputationExpression="10" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </containerMappings>
        <containerMappings name="EnumEntity" labelDirectEdit="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Edge%20Class%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='EditEntityLabel']" semanticCandidatesExpression="aql:let enums = self.eAllContents(eCModel::EnumEntity) in enums.name->asSet()->collect( n | enums->any(e | e.name = n))" domainClass="eCModel.EnumEntity" childrenPresentation="List">
          <subNodeMappings name="EnumItem" labelDirectEdit="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Edge%20Class%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='EditEntityLabel']" semanticCandidatesExpression="feature:eAllContents" domainClass="eCModel.EnumItem">
            <style xsi:type="style:SquareDescription" showIcon="false" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" showIcon="false">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </containerMappings>
        <toolSections name="elementTools" label="Elements">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Entity" label="Class" containerMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Edge%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Entity" referenceName="entity">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'Entity'+container.entity->filter(eCModel::Entity)->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="EditEntityLabel">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ToolGroup" name="Property">
            <tools xsi:type="tool:NodeCreationDescription" name="Attribute" nodeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Edge%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']/@subNodeMappings[name='EntityAttribute']" extraMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Edge%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Edge%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']/@subNodeMappings[name='EntityAttribute'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Edge%20Class%20Diagram']/@defaultLayer/@containerMappings[name='EnumEntity'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Edge%20Class%20Diagram']/@defaultLayer/@containerMappings[name='EnumEntity']/@subNodeMappings[name='EnumItem']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Attribute" referenceName="attributes" variableName="newAttribute">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'Attribute'+container.attributes->filter(eCModel::Attribute)->size()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ismultiple" valueExpression="false"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.PrimitiveTypeCS" referenceName="type" variableName="defaultType">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="String"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:NodeCreationDescription" name="EnumType" label="EnumType" nodeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Edge%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']/@subNodeMappings[name='EntityAttribute']" extraMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Edge%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Edge%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']/@subNodeMappings[name='EntityAttribute'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Edge%20Class%20Diagram']/@defaultLayer/@containerMappings[name='EnumEntity'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Edge%20Class%20Diagram']/@defaultLayer/@containerMappings[name='EnumEntity']/@subNodeMappings[name='EnumItem']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Attribute" referenceName="attributes" variableName="newAttribute">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'attribute'+container.attributes->filter(eCModel::Attribute)->size()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ismultiple" valueExpression="false"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.EnumEntity" referenceName="type" variableName="newEnumEntityType">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'EnumEntity' + container.eContainer().eAllContents(eCModel::EnumEntity).name->asSet()->collect( n | container.eContainer().eAllContents(eCModel::EnumEntity)->any(e | e.name = n))->size()"/>
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.EnumItem" referenceName="element" variableName="newEnumItem">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="ENUMITEMS"/>
                        </subModelOperations>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:newEnumEntityType"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
          </ownedTools>
        </toolSections>
        <toolSections name="relationTool" label="Relations">
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="superEntity" label="Generation" precondition="aql:preTarget.differs(preSource)" edgeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Edge%20Class%20Diagram']/@defaultLayer/@edgeMappings[name='SuperEntity']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="superEntity" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="entityGenerationReconnect">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="superEntity" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="entityGenerationDelete" label="Generation Delete">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:Unset" featureName="superEntity"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="entityAssociationCreate" label="Association" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Edge%20Class%20Diagram']/@defaultLayer/@edgeMappings[name='EntityReference']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:target">
                <subModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="aql:self.reference->exists( r | r.entity.name = source.name)">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Reference" referenceName="reference">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:source.name + 'to' + target.name"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="entity" valueExpression="var:target"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="ismultiple" valueExpression="false"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="Association"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="isReverseAssoication" valueExpression="true"/>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <default>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Reference" referenceName="reference">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:source.name + 'to' + target.name"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="entity" valueExpression="var:target"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="ismultiple" valueExpression="false"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="Association"/>
                      </subModelOperations>
                    </subModelOperations>
                  </default>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="entityAssociationReconnect">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql:element.entity.reference->any( r | r.entity.name = element.eContainer().name) = null">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="entity" valueExpression="var:target"/>
                  </subModelOperations>
                </cases>
                <default>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.entity.reference->any( r | r.entity.name = element.eContainer().name)">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="isReverseAssoication" valueExpression="false"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="entity" valueExpression="var:target"/>
                    </subModelOperations>
                  </subModelOperations>
                </default>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:For" expression="aql:element.eInverse()->filter(eCModel::Reference)" iteratorName="refer">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Ohters">
          <ownedTools xsi:type="tool:DoubleClickDescription" name="openCCDEEF" forceRefresh="true" mappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Edge%20Class%20Diagram']/@defaultLayer/@edgeMappings[name='EntityReference']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ExternalJavaAction" name="Open EEF Wizard Action" id="org.eclipse.sirius.eef.actions.openPropertiesWizard"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="Cloud Class Diagram" domainClass="eCModel.DomainModel" enablePopupBars="true">
      <defaultLayer name="Default">
        <edgeMappings name="EntityReference" preconditionExpression="aql:self.isReverseAssoication==false" doubleClickDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Cloud%20Class%20Diagram']/@defaultLayer/@toolSections.2/@ownedTools[name='openCCDEEF']" sourceMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Cloud%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']" targetMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Cloud%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']" targetFinderExpression="feature:entity" sourceFinderExpression="aql:self.eContainer()" targetExpression="var:self" domainClass="eCModel.Reference" useDomainElement="true" reconnections="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Cloud%20Class%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='entityAssociationReconnect']">
          <conditionnalStyles predicateExpression="aql:self.ismultiple=true and self.type='Association'">
            <style targetArrow="NoDecoration" sizeComputationExpression="0.5">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <beginLabelStyleDescription showIcon="false" labelExpression="aql:let ref = self.eCrossReferences().reference->any(r | r.eCrossReferences()->last().name == self.eContainer().name) in if self.eCrossReferences()->excludes(self.eContainer()) and ref.isReverseAssoication == true then (if ref.ismultiple == true then ref.name + ':*' else ref.name + ':1' endif) else '' endif">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </beginLabelStyleDescription>
              <endLabelStyleDescription showIcon="false" labelExpression="aql:self.name + ':*'">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </endLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.ismultiple=false and self.type='Association'">
            <style targetArrow="NoDecoration" sizeComputationExpression="0.5">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <beginLabelStyleDescription showIcon="false" labelExpression="aql:let ref = self.eCrossReferences().reference->any(r | r.eCrossReferences()->last().name == self.eContainer().name) in if self.eCrossReferences()->excludes(self.eContainer()) and ref.isReverseAssoication == true then (if ref.ismultiple == true then ref.name + ':*' else ref.name + ':1' endif) else '' endif">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </beginLabelStyleDescription>
              <endLabelStyleDescription showIcon="false" labelExpression="aql:self.name + ':1'">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </endLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.type='Aggregation'">
            <style sourceArrow="Diamond" targetArrow="NoDecoration" sizeComputationExpression="0.5">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <beginLabelStyleDescription showIcon="false" labelExpression="aql:  let ref = self.eCrossReferences().reference->any(r | r.eCrossReferences()->last().name == self.eContainer().name) in if self.eCrossReferences()->excludes(self.eContainer()) and ref.isReverseAssoication == true then (if ref.ismultiple == true then ref.name + ':1...*' else ref.name + ':1' endif) else '' endif">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </beginLabelStyleDescription>
              <endLabelStyleDescription showIcon="false" labelExpression="aql:self.name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </endLabelStyleDescription>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.type='Composition'">
            <style sourceArrow="FillDiamond" targetArrow="NoDecoration" sizeComputationExpression="0.5">
              <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              <beginLabelStyleDescription showIcon="false" labelExpression="aql:  let ref = self.eCrossReferences().reference->any(r | r.eCrossReferences()->last().name == self.eContainer().name) in if self.eCrossReferences()->excludes(self.eContainer()) and ref.isReverseAssoication == true then (if ref.ismultiple == true then ref.name + ':1...*' else ref.name + ':1' endif) else '' endif">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </beginLabelStyleDescription>
              <endLabelStyleDescription showIcon="false" labelExpression="aql:self.name">
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </endLabelStyleDescription>
            </style>
          </conditionnalStyles>
        </edgeMappings>
        <edgeMappings name="SuperEntity" deletionDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Cloud%20Class%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='entityGenerationDelete']" sourceMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Cloud%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']" targetMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Cloud%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']" targetFinderExpression="aql:self.superEntity" reconnections="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Cloud%20Class%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='entityGenerationReconnect']">
          <style targetArrow="InputClosedArrow" sizeComputationExpression="0.5">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="Entity" deletionDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Cloud%20Class%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='']" labelDirectEdit="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Cloud%20Class%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='EditEntityLabel']" semanticCandidatesExpression="aql:self.entity->select(i | i.entityLocation.name='Cloud' or i.entityLocation.name='Cache')" domainClass="eCModel.Entity" childrenPresentation="List">
          <subNodeMappings name="LocationType" semanticCandidatesExpression="aql:self.entityLocation" domainClass="eCModel.EntityLocation">
            <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:'«' + self.name + '»'" labelPosition="node" resizeKind="NSEW" width="300" height="20">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="EntityAttribute" labelDirectEdit="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Cloud%20Class%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='EditEntityLabel']" semanticCandidatesExpression="aql:self.attributes" domainClass="eCModel.Attribute">
            <style xsi:type="style:SquareDescription" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
            <conditionnalStyles predicateExpression="aql:self.type.oclIsTypeOf(eCModel::PrimitiveTypeCS)=true">
              <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.name + ' : ' + self.type.name" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW" height="20">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </conditionnalStyles>
            <conditionnalStyles predicateExpression="aql:self.type.oclIsTypeOf(eCModel::EnumEntity)=true">
              <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="aql:self.name + ' : ' + self.type.name " labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW" height="20">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </conditionnalStyles>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="9" showIcon="false" widthComputationExpression="10" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
          </style>
        </containerMappings>
        <containerMappings name="EnumEntity" labelDirectEdit="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Cloud%20Class%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='EditEntityLabel']" semanticCandidatesExpression="aql:let enums = self.eAllContents(eCModel::EnumEntity) in enums.name->asSet()->collect( n | enums->any(e | e.name = n))" domainClass="eCModel.EnumEntity" childrenPresentation="List">
          <subNodeMappings name="EnumItem" labelDirectEdit="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Cloud%20Class%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='EditEntityLabel']" semanticCandidatesExpression="feature:eAllContents" domainClass="eCModel.EnumItem">
            <style xsi:type="style:SquareDescription" showIcon="false" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" showIcon="false">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_green']"/>
          </style>
        </containerMappings>
        <toolSections name="elementTools" label="Elements">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Entity" label="Class" containerMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Cloud%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Entity" referenceName="entity">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'Entity'+container.entity->filter(eCModel::Entity)->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="EditEntityLabel">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ToolGroup" name="Property">
            <tools xsi:type="tool:NodeCreationDescription" name="Attribute" nodeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Cloud%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']/@subNodeMappings[name='EntityAttribute']" extraMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Cloud%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Cloud%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']/@subNodeMappings[name='EntityAttribute'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Cloud%20Class%20Diagram']/@defaultLayer/@containerMappings[name='EnumEntity'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Cloud%20Class%20Diagram']/@defaultLayer/@containerMappings[name='EnumEntity']/@subNodeMappings[name='EnumItem']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Attribute" referenceName="attributes" variableName="newAttribute">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'Attribute'+container.attributes->filter(eCModel::Attribute)->size()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ismultiple" valueExpression="false"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.PrimitiveTypeCS" referenceName="type" variableName="defaultType">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="String"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:NodeCreationDescription" name="EnumType" label="EnumType" nodeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Cloud%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']/@subNodeMappings[name='EntityAttribute']" extraMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Cloud%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Cloud%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']/@subNodeMappings[name='EntityAttribute'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Cloud%20Class%20Diagram']/@defaultLayer/@containerMappings[name='EnumEntity'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Cloud%20Class%20Diagram']/@defaultLayer/@containerMappings[name='EnumEntity']/@subNodeMappings[name='EnumItem']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Attribute" referenceName="attributes" variableName="newAttribute">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'attribute'+container.attributes->filter(eCModel::Attribute)->size()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ismultiple" valueExpression="false"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.EnumEntity" referenceName="type" variableName="newEnumEntityType">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'EnumEntity' + container.eContainer().eAllContents(eCModel::EnumEntity).name->asSet()->collect( n | container.eContainer().eAllContents(eCModel::EnumEntity)->any(e | e.name = n))->size()"/>
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.EnumItem" referenceName="element" variableName="newEnumItem">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="ENUMITEMS"/>
                        </subModelOperations>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:newEnumEntityType"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
          </ownedTools>
        </toolSections>
        <toolSections name="relationTool" label="Relations">
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="superEntity" label="Generation" precondition="aql:preTarget.differs(preSource)" edgeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Cloud%20Class%20Diagram']/@defaultLayer/@edgeMappings[name='SuperEntity']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="superEntity" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="entityGenerationReconnect">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="superEntity" valueExpression="var:target"/>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="entityGenerationDelete" label="Generation Delete">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:Unset" featureName="superEntity"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="entityAssociationCreate" label="Association" forceRefresh="true" edgeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Cloud%20Class%20Diagram']/@defaultLayer/@edgeMappings[name='EntityReference']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:target">
                <subModelOperations xsi:type="tool_1:Switch">
                  <cases conditionExpression="aql:self.reference->exists( r | r.entity.name = source.name)">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Reference" referenceName="reference">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:source.name + 'to' + target.name"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="entity" valueExpression="var:target"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="ismultiple" valueExpression="false"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="Association"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="isReverseAssoication" valueExpression="true"/>
                      </subModelOperations>
                    </subModelOperations>
                  </cases>
                  <default>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Reference" referenceName="reference">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:source.name + 'to' + target.name"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="entity" valueExpression="var:target"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="ismultiple" valueExpression="false"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="Association"/>
                      </subModelOperations>
                    </subModelOperations>
                  </default>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="entityAssociationReconnect">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql:element.entity.reference->any( r | r.entity.name = element.eContainer().name) = null">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="entity" valueExpression="var:target"/>
                  </subModelOperations>
                </cases>
                <default>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.entity.reference->any( r | r.entity.name = element.eContainer().name)">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="isReverseAssoication" valueExpression="false"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="entity" valueExpression="var:target"/>
                    </subModelOperations>
                  </subModelOperations>
                </default>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:For" expression="aql:element.eInverse()->filter(eCModel::Reference)" iteratorName="refer">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Ohters">
          <ownedTools xsi:type="tool:DoubleClickDescription" name="openCCDEEF" forceRefresh="true" mappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Cloud%20Class%20Diagram']/@defaultLayer/@edgeMappings[name='EntityReference']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ExternalJavaAction" name="Open EEF Wizard Action" id="org.eclipse.sirius.eef.actions.openPropertiesWizard"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="Service Diagram" label="Service Diagram" domainClass="eCModel.UseCaseModel" enablePopupBars="true">
      <defaultLayer name="Default">
        <containerMappings name="service" label="Service" labelDirectEdit="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@toolSections.0/@ownedTools[name='EditServiceLabel']" doubleClickDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@toolSections.1/@ownedTools[name='openSDEEF']" domainClass="eCModel.Service" childrenPresentation="VerticalStack">
          <subContainerMappings name="operationContainer" preconditionExpression="aql:self.operation->size()&lt;> 0" semanticCandidatesExpression="var:self" domainClass="eCModel.Service" childrenPresentation="List">
            <subNodeMappings name="serviceOperation" label="Service Operation" semanticCandidatesExpression="aql:self.operation" domainClass="eCModel.Operation">
              <style xsi:type="style:SquareDescription" labelSize="10" showIcon="false" labelExpression="aql:self.name + '(' + self.parameter.name->sep(',').toString() + ')'" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" showIcon="false" labelExpression="aql:' operations'" labelAlignment="LEFT">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelFormat>italic</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.0"/>
            </style>
          </subContainerMappings>
          <subContainerMappings name="propertyContainer" preconditionExpression="aql:self.temp_property->size()&lt;> 0" semanticCandidatesExpression="aql:self" domainClass="eCModel.Service" childrenPresentation="List">
            <subNodeMappings name="tempproperty" label="Temp Property" semanticCandidatesExpression="aql:self.temp_property" domainClass="eCModel.Attribute">
              <conditionnalStyles predicateExpression="aql:self.type.oclIsTypeOf(eCModel::PrimitiveTypeCS)=true">
                <style xsi:type="style:SquareDescription" labelSize="10" showIcon="false" labelExpression="aql:self.name + ' : ' + self.type.name" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:self.type.oclIsTypeOf(eCModel::EnumEntity)=true">
                <style xsi:type="style:SquareDescription" labelSize="10" showIcon="false" labelExpression="aql:self.name + ' : ' + self.type.name" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
              <conditionnalStyles predicateExpression="aql:self.type.oclIsTypeOf(eCModel::EntityType)=true">
                <style xsi:type="style:SquareDescription" labelSize="10" showIcon="false" labelExpression="aql:self.name + ' : ' + self.type.entity.name + if self.ismultiple then '*' else '' endif" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
                  <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                  <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
                </style>
              </conditionnalStyles>
            </subNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" showIcon="false" labelExpression="aql:' temp properties'" labelAlignment="LEFT">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelFormat>italic</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.0"/>
            </style>
          </subContainerMappings>
          <subContainerMappings name="workflowContainer" preconditionExpression="aql:self.workflow->size()&lt;> 0" semanticCandidatesExpression="aql:self" domainClass="eCModel.Service" childrenPresentation="List">
            <subNodeMappings name="workflow" label="WorkFlow" semanticCandidatesExpression="aql:self.workflow" domainClass="eCModel.Workflow">
              <style xsi:type="style:SquareDescription" labelSize="10" showIcon="false" labelExpression="aql:self.name" labelAlignment="LEFT" labelPosition="node" resizeKind="NSEW">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
              </style>
            </subNodeMappings>
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" showIcon="false" labelExpression="aql:' workflows'" labelAlignment="LEFT">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelFormat>italic</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
              <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.0"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="10" showIcon="false" widthComputationExpression="15" heightComputationExpression="10">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
          </style>
        </containerMappings>
        <toolSections name="Elements">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="serviceCreate" label="Service" containerMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Service" referenceName="service">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'Service'+container.service->filter(eCModel::Service)->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="createOperation" label="Operation" nodeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']/@subContainerMappings[name='operationContainer']/@subNodeMappings[name='serviceOperation']" extraMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']/@subContainerMappings[name='operationContainer'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']/@subContainerMappings[name='operationContainer']/@subNodeMappings[name='serviceOperation'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']/@subContainerMappings[name='propertyContainer'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']/@subContainerMappings[name='propertyContainer']/@subNodeMappings[name='tempproperty'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']/@subContainerMappings[name='workflowContainer'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']/@subContainerMappings[name='workflowContainer']/@subNodeMappings[name='workflow']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Operation" referenceName="operation">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'op'+container.operation->filter(eCModel::Operation)->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DirectEditLabel" name="EditServiceLabel">
            <mask mask="{0}"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:0"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ToolGroup" name="Property">
            <tools xsi:type="tool:NodeCreationDescription" name="Attribute" label="PrimitiveProperty" nodeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']/@subContainerMappings[name='propertyContainer']/@subNodeMappings[name='tempproperty']" extraMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']/@subContainerMappings[name='operationContainer'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']/@subContainerMappings[name='operationContainer']/@subNodeMappings[name='serviceOperation'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']/@subContainerMappings[name='propertyContainer'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']/@subContainerMappings[name='propertyContainer']/@subNodeMappings[name='tempproperty'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']/@subContainerMappings[name='workflowContainer'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']/@subContainerMappings[name='workflowContainer']/@subNodeMappings[name='workflow']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Attribute" referenceName="temp_property" variableName="newAttribute">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'attribute'+container.temp_property->filter(eCModel::Attribute)->size()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ismultiple" valueExpression="false"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.PrimitiveTypeCS" referenceName="type" variableName="defaultType">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="String"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:NodeCreationDescription" name="Attribute" label="EntityProperty" nodeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']/@subContainerMappings[name='propertyContainer']/@subNodeMappings[name='tempproperty']" extraMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']/@subContainerMappings[name='operationContainer'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']/@subContainerMappings[name='operationContainer']/@subNodeMappings[name='serviceOperation'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']/@subContainerMappings[name='propertyContainer'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']/@subContainerMappings[name='propertyContainer']/@subNodeMappings[name='tempproperty'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']/@subContainerMappings[name='workflowContainer'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']/@subContainerMappings[name='workflowContainer']/@subNodeMappings[name='workflow']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Attribute" referenceName="temp_property" variableName="newAttribute">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'attribute'+container.temp_property->filter(eCModel::Attribute)->size()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ismultiple" valueExpression="false"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.EntityType" referenceName="type" variableName="newEntityType">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="entity" valueExpression="aql:self.eResource().getContents().eContents(eCModel::Entity)->first()"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:newEntityType"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:NodeCreationDescription" name="Attribute" label="EnumEntity" nodeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']/@subContainerMappings[name='propertyContainer']/@subNodeMappings[name='tempproperty']" extraMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']/@subContainerMappings[name='operationContainer'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']/@subContainerMappings[name='operationContainer']/@subNodeMappings[name='serviceOperation'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']/@subContainerMappings[name='propertyContainer'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']/@subContainerMappings[name='propertyContainer']/@subNodeMappings[name='tempproperty'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']/@subContainerMappings[name='workflowContainer'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service']/@subContainerMappings[name='workflowContainer']/@subNodeMappings[name='workflow']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Attribute" referenceName="temp_property" variableName="newAttribute">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'attribute'+container.temp_property->filter(eCModel::Attribute)->size()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ismultiple" valueExpression="false"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.EnumEntity" referenceName="type" variableName="newEnumEntityType">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: 'EnumEntity' + eCModel::EnumEntity->allInstances()->size()"/>
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.EnumItem" referenceName="element" variableName="newEnumItem">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="ENUMITEM"/>
                        </subModelOperations>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:newEnumEntityType"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ExternalJavaAction" name="refreshProperty" id="net.mydreamy.requirementmodel.design.javaActions"/>
        </toolSections>
        <toolSections name="Ohters">
          <ownedTools xsi:type="tool:DoubleClickDescription" name="openSDEEF" forceRefresh="true" mappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Service%20Diagram']/@defaultLayer/@containerMappings[name='service'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='Conceptual%20Class%20Diagram']/@defaultLayer/@containerMappings[name='Entity']/@subNodeMappings[name='EntityAttribute']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ExternalJavaAction" name="Open EEF Wizard Action" id="org.eclipse.sirius.eef.actions.openPropertiesWizard"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_2:SequenceDiagramDescription" name="ssd" label="System Sequence Diagram (Workflow)" titleExpression="aql:self.name" domainClass="eCModel.Workflow" endsOrdering="feature:exps" instanceRolesOrdering="feature:participants">
      <defaultLayer name="Default">
        <nodeMappings xsi:type="description_2:InstanceRoleMapping" name="Participant" semanticCandidatesExpression="feature:participants" semanticElements="var:self" synchronizationLock="true" domainClass="eCModel.Participant">
          <borderedNodeMappings xsi:type="description_2:ExecutionMapping" name="Lifeline" semanticCandidatesExpression="var:self" semanticElements="var:self" synchronizationLock="true" domainClass="eCModel.Participant" startingEndFinderExpression="var:self" finishingEndFinderExpression="var:self">
            <borderedNodeMappings xsi:type="description_2:ExecutionMapping" name="Execution" semanticCandidatesExpression="service:getAllContainedOpeartion" synchronizationLock="true" domainClass="eCModel.Operation">
              <style xsi:type="style:SquareDescription" borderSizeComputationExpression="1" showIcon="false" labelExpression="aql:self.name + '()'" resizeKind="NORTH_SOUTH" width="1" height="8" color="//@userColorsPalettes[name='Dutch%20Seas']/@entries[name='Glint%20on%20the%20ocean']">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </borderedNodeMappings>
            <style xsi:type="style:SquareDescription" borderSizeComputationExpression="2" showIcon="false" labelExpression="" resizeKind="NSEW" width="1" height="100">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </borderedNodeMappings>
          <conditionnalStyles predicateExpression="aql:self.oclIsTypeOf(eCModel::Service)=true">
            <style xsi:type="style:SquareDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql: ':' + self.name" sizeComputationExpression="" labelPosition="node" resizeKind="NSEW" width="12" height="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.oclIsTypeOf(eCModel::Actor)=true">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql: ':' + self.name" resizeKind="NSEW" arcWidth="1" arcHeight="1" workspacePath="/net.mydreamy.requirementmodel.design/images/actor.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <edgeMappings xsi:type="description_2:BasicMessageMapping" name="Message" sourceMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='ssd']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='ssd']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline']/@borderedNodeMappings[name='Execution']" targetMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='ssd']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='ssd']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline']/@borderedNodeMappings[name='Execution']" domainClass="eCModel.Operation" useDomainElement="true">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            <centerLabelStyleDescription showIcon="false" labelExpression="aql:'aaa'">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings xsi:type="description_2:CombinedFragmentMapping" name="Combined Fragment" semanticCandidatesExpression="aql:self.exps->filter(eCModel::ComplexOpeartion)" synchronizationLock="true" domainClass="eCModel.ComplexOpeartion" coveredLifelinesExpression="aql:self.eContainer().participants">
          <subContainerMappings xsi:type="description_2:OperandMapping" name="Operand" domainClass="eCModel.SwitchCase">
            <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" showIcon="false" labelExpression="aql:'condition: '" labelAlignment="LEFT">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="2" borderLineStyle="dash" showIcon="false" labelExpression="service:computeCombinedLabel()" labelAlignment="LEFT">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelFormat>italic</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.0"/>
          </style>
        </containerMappings>
        <toolSections>
          <ownedTools xsi:type="tool_1:ExternalJavaAction" name="Move finishingEnd" id="org.eclipse.sirius.business.api.action.moveElement">
            <parameters name="referenceOwner" value="service:getInteraction"/>
            <parameters name="referenceName" value="ends"/>
            <parameters name="element" value="var:newExecutionFinishEnd"/>
            <parameters name="predecessor" value="aql:finishingEndPredecessor.semanticEnd"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ExternalJavaAction" name="Move startingEnd" id="org.eclipse.sirius.business.api.action.moveElement">
            <parameters name="referenceOwner" value="var:self"/>
            <parameters name="referenceName" value="ends"/>
            <parameters name="element" value="var:newExecutionStartEnd"/>
            <parameters name="predecessor" value="aql:startingEndPredecessor.semanticEnd"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ExternalJavaAction" name="Move finishingEnd" id="org.eclipse.sirius.business.api.action.moveElement">
            <parameters name="referenceOwner" value="var:self"/>
            <parameters name="referenceName" value="ends"/>
            <parameters name="element" value="var:newExecutionFinishEnd"/>
            <parameters name="predecessor" value="aql:finishingEndPredecessor.semanticEnd"/>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_2:SequenceDiagramDescription" name="SequenceDiagram" label="System Sequence Diagram (Interaction)" titleExpression="aql:self.name" domainClass="eCModel.Interaction" endsOrdering="feature:ends" instanceRolesOrdering="feature:participants">
      <defaultLayer name="Default">
        <nodeMappings xsi:type="description_2:InstanceRoleMapping" name="Participant" semanticCandidatesExpression="feature:participants" semanticElements="var:self" doubleClickDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.2/@ownedTools[name='openSSDEEF']" synchronizationLock="true" domainClass="eCModel.Participant">
          <borderedNodeMappings xsi:type="description_2:ExecutionMapping" name="Lifeline" semanticCandidatesExpression="var:self" semanticElements="var:self" doubleClickDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.2/@ownedTools[name='openSSDEEF']" synchronizationLock="true" domainClass="eCModel.Participant" startingEndFinderExpression="var:self" finishingEndFinderExpression="var:self">
            <borderedNodeMappings xsi:type="description_2:ExecutionMapping" name="Execution" deletionDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ExecutionDelete']" semanticCandidatesExpression="aql:diagram.target.executions->select(e | e.owner = self)" synchronizationLock="true" domainClass="eCModel.Execution" reusedBorderedNodeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline']/@borderedNodeMappings[name='Execution']" startingEndFinderExpression="feature:start" finishingEndFinderExpression="feature:end">
              <style xsi:type="style:SquareDescription" borderSizeComputationExpression="1" showIcon="false" labelExpression="" resizeKind="NORTH_SOUTH" width="1" height="6" color="//@userColorsPalettes[name='Dutch%20Seas']/@entries[name='Glint%20on%20the%20ocean']">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </borderedNodeMappings>
            <style xsi:type="style:SquareDescription" borderSizeComputationExpression="2" borderLineStyle="dot" showIcon="false" labelExpression="" resizeKind="NSEW" width="1" height="100">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </borderedNodeMappings>
          <conditionnalStyles predicateExpression="aql:self.oclIsTypeOf(eCModel::Service)=true">
            <style xsi:type="style:SquareDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql: ':' + self.name" sizeComputationExpression="" labelPosition="node" resizeKind="NSEW" width="12" height="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.oclIsTypeOf(eCModel::Actor)=true">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql: ':' + self.name" resizeKind="NSEW" arcWidth="1" arcHeight="1" workspacePath="/net.mydreamy.requirementmodel.design/images/actor.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <edgeMappings xsi:type="description_2:BasicMessageMapping" name="CallMessage" deletionDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='CallMessageDelete']" semanticCandidatesExpression="feature:messages" doubleClickDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.2/@ownedTools[name='openSSDEEF']" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline']/@borderedNodeMappings[name='Execution']" targetMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline']/@borderedNodeMappings[name='Execution']" targetFinderExpression="aql:self.receivingEnd.context" sourceFinderExpression="aql:self.sendingEnd.context" domainClass="eCModel.CallMessage" useDomainElement="true" sendingEndFinderExpression="feature:sendingEnd" receivingEndFinderExpression="feature:receivingEnd">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            <centerLabelStyleDescription labelSize="10" showIcon="false" labelExpression="aql:self.op.name + ' ('  + self.op.parameter.name->sep(', ') + ')'">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings xsi:type="description_2:ReturnMessageMapping" name="ReturnMessage" deletionDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='ReturnMessageDelete']" semanticCandidatesExpression="feature:messages" doubleClickDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.2/@ownedTools[name='openSSDEEF']" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline']/@borderedNodeMappings[name='Execution']" targetMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline']/@borderedNodeMappings[name='Execution']" targetFinderExpression="aql:self.receivingEnd.context" sourceFinderExpression="aql:self.sendingEnd.context" domainClass="eCModel.ReturnMessage" useDomainElement="true" sendingEndFinderExpression="feature:sendingEnd" receivingEndFinderExpression="feature:receivingEnd" invocationMessageFinderExpression="feature:invocationMessage">
          <style lineStyle="dot" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            <centerLabelStyleDescription showIcon="false">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings xsi:type="description_2:CombinedFragmentMapping" name="Combined Fragment" preconditionExpression="aql:not self.coveredParticipants->isEmpty()" deletionDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.1/@ownedTools[name='CombinedFragementDelete']" semanticCandidatesExpression="feature:combinedFragments" semanticElements="var:self" doubleClickDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.2/@ownedTools[name='openSSDEEF']" synchronizationLock="true" domainClass="eCModel.CombinedFragment" startingEndFinderExpression="feature:start" finishingEndFinderExpression="feature:finish" coveredLifelinesExpression="feature:coveredParticipants">
          <subContainerMappings xsi:type="description_2:OperandMapping" name="Operand" deletionDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.1/@ownedTools[name='OperandDelete']" semanticCandidatesExpression="feature:ownedOperands" semanticElements="var:self" synchronizationLock="true" domainClass="eCModel.Operand" startingEndFinderExpression="feature:start" finishingEndFinderExpression="aql:self.finish">
            <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="1" labelSize="10" showIcon="false" labelExpression="aql:'  [' + self.name + ']'" labelAlignment="LEFT" heightComputationExpression="10">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_gray']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" arcWidth="1" arcHeight="1" borderSizeComputationExpression="2" borderLineStyle="dash" labelSize="10" showIcon="false" labelExpression="aql:self.operator" labelAlignment="LEFT" heightComputationExpression="50" backgroundStyle="Liquid">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelFormat>bold</labelFormat>
            <labelFormat>italic</labelFormat>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.0"/>
          </style>
        </containerMappings>
        <toolSections name="Tools">
          <ownedTools xsi:type="tool_2:ExecutionCreationTool" name="ExecutionCreate" label="Execution" precondition="aql:self.oclIsTypeOf(eCModel::Service)" nodeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline']/@borderedNodeMappings[name='Execution']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:getInteraction">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Execution" referenceName="executions" variableName="newExecution">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="owner" valueExpression="var:container"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.ExecutionEnd" referenceName="ends" variableName="newExecutionStartEnd">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="context" valueExpression="aql:newExecution.owner"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="execution" valueExpression="var:newExecution"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.ExecutionEnd" referenceName="ends" variableName="newExecutionFinishEnd">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="context" valueExpression="aql:newExecution.owner"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="execution" valueExpression="var:newExecution"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newExecution">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: diagram.name + 'Execution' + diagram.target.executions->size()"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newExecutionStartEnd">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: newExecution.name + 'StartEnd'"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newExecutionFinishEnd">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: newExecution.name + 'FinishEnd'"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ExternalJavaAction" name="Show variables" id="org.eclipse.sirius.business.api.action.printVariables">
                  <parameters name="title" value="Execution creation"/>
                  <parameters name="enabled" value="aql:true"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newExecution">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="start" valueExpression="var:newExecutionStartEnd"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="end" valueExpression="var:newExecutionFinishEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ExternalJavaAction" name="Move ExecutionFinishEnd" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:newExecutionFinishEnd"/>
                  <parameters name="predecessor" value="aql:startingEndPredecessor.semanticEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ExternalJavaAction" name="Move ExecutionStartEnd" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:newExecutionStartEnd"/>
                  <parameters name="predecessor" value="aql:startingEndPredecessor.semanticEnd"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="ExecutionDelete" label="Execution">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="feature:start">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(eCModel::ExecutionEnd) or (self.oclIsKindOf(eCModel::MessageEnd) and self.message = null)">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="feature:end">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(eCModel::ExecutionEnd) or (self.oclIsKindOf(eCModel::MessageEnd) and self.message = null)">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_2:MessageCreationTool" name="Call" label="CallMessage" edgeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@edgeMappings[name='CallMessage']">
            <sourceVariable name="sourceVariable"/>
            <targetVariable name="targetVariable">
              <subVariables xsi:type="tool_1:AcceleoVariable" name="super_ssd" computationExpression="service:getInteraction"/>
            </targetVariable>
            <sourceViewVariable name="sourceViewVariable"/>
            <targetViewVariable name="targetViewVariable"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:targetVariable">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:targetVariable.oclIsTypeOf(eCModel::Execution)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:targetVariable.eContainer(eCModel::Interaction)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.CallMessage" referenceName="messages" variableName="newMessage">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:super_ssd.name + 'CallMessage' + super_ssd.messages->size()"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="receivingEnd" valueExpression="aql:targetVariable.start"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.MessageEnd" referenceName="ends" variableName="newsendingEnd">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="context" valueExpression="var:sourceVariable"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="message" valueExpression="var:newMessage"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newMessage">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="sendingEnd" valueExpression="var:newsendingEnd"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:targetVariable.eContainer(eCModel::Interaction).name + 'CallMessage' + targetVariable.eContainer(eCModel::Interaction).messages->size()"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newsendingEnd">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newMessage.name + 'SendingEnd'"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:targetVariable.owner">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Operation" referenceName="operation" variableName="newCallMessageOperation">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="expressions::BooleanLiteralExp" variableName="isChecked">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:isChecked">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="booleanSymbol" valueExpression="aql:true"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="CallMessage Parameters">
                          <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                            <initialOperation/>
                          </buttons>
                          <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:targetVariable.eContainer(eCModel::Interaction)">
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:isChecked.booleanSymbol = true">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.ReturnMessage" referenceName="messages" variableName="newReturnMessage">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="sendingEnd" valueExpression="aql:targetVariable.end"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="invocationMessage" valueExpression="aql:newMessage"/>
                                  </subModelOperations>
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.MessageEnd" referenceName="ends" variableName="newReceivingEnd">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="context" valueExpression="var:sourceVariable"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="message" valueExpression="var:newReturnMessage"/>
                                  </subModelOperations>
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newReturnMessage">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:targetVariable.start.eInverse(eCModel::Message)->first().name + 'Return'"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="receivingEnd" valueExpression="var:newReceivingEnd"/>
                                  </subModelOperations>
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newReceivingEnd">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newReturnMessage.name + 'ReceivingEnd'"/>
                                  </subModelOperations>
                                </subModelOperations>
                              </firstModelOperations>
                            </initialOperation>
                          </buttons>
                          <page name="Default Page" labelExpression="Create a new CallMessage" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Call']/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@subModelOperations.4/@subModelOperations.0/@subModelOperations.1/@groups.0"/>
                          <groups name="Default Group" labelExpression="CallMessage Parameters" semanticCandidateExpression="var:self">
                            <controls xsi:type="properties:TextDescription" labelExpression="System Operation Name:" valueExpression="aql:newCallMessageOperation.name">
                              <initialOperation>
                                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newCallMessageOperation">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newValue"/>
                                </firstModelOperations>
                              </initialOperation>
                            </controls>
                            <controls xsi:type="properties:CheckboxDescription" name="isCheck" labelExpression="Create a Default ReturnMessage for CallMessage" valueExpression="aql:isChecked.booleanSymbol">
                              <initialOperation>
                                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:isChecked">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="booleanSymbol" valueExpression="var:newValue"/>
                                  <subModelOperations xsi:type="tool_1:ExternalJavaAction" name="Show variables" id="org.eclipse.sirius.business.api.action.printVariables">
                                    <parameters name="title" value="Execution creation"/>
                                    <parameters name="enabled" value="aql:true"/>
                                  </subModelOperations>
                                </firstModelOperations>
                              </initialOperation>
                            </controls>
                          </groups>
                        </subModelOperations>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newMessage">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="op" valueExpression="aql:newCallMessageOperation"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:false"/>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:isChecked.booleanSymbol = true">
                      <subModelOperations xsi:type="tool_1:ExternalJavaAction" name="Move ReceivingEnd" id="org.eclipse.sirius.business.api.action.moveElement">
                        <parameters name="referenceOwner" value="var:self"/>
                        <parameters name="referenceName" value="ends"/>
                        <parameters name="element" value="var:newReceivingEnd"/>
                        <parameters name="predecessor" value="aql:startingEndPredecessor.semanticEnd"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:isChecked">
                        <subModelOperations xsi:type="tool_1:RemoveElement"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:targetVariable.end &lt;> startingEndPredecessor.semanticEnd">
                      <subModelOperations xsi:type="tool_1:ExternalJavaAction" name="Move ExecutionFinishEnd" id="org.eclipse.sirius.business.api.action.moveElement">
                        <parameters name="referenceOwner" value="var:self"/>
                        <parameters name="referenceName" value="ends"/>
                        <parameters name="element" value="aql:targetVariable.end"/>
                        <parameters name="predecessor" value="aql:startingEndPredecessor.semanticEnd"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:targetVariable.start &lt;> startingEndPredecessor.semanticEnd">
                      <subModelOperations xsi:type="tool_1:ExternalJavaAction" name="Move ExecutionStartEnd" id="org.eclipse.sirius.business.api.action.moveElement">
                        <parameters name="referenceOwner" value="var:self"/>
                        <parameters name="referenceName" value="ends"/>
                        <parameters name="element" value="aql:targetVariable.start"/>
                        <parameters name="predecessor" value="aql:startingEndPredecessor.semanticEnd"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:ExternalJavaAction" name="Move sendingEnd" id="org.eclipse.sirius.business.api.action.moveElement">
                      <parameters name="referenceOwner" value="var:self"/>
                      <parameters name="referenceName" value="ends"/>
                      <parameters name="element" value="var:newsendingEnd"/>
                      <parameters name="predecessor" value="aql:startingEndPredecessor.semanticEnd"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="ends" valueExpression="service:reOrderEndForCallMessage(targetVariable, newsendingEnd)"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:targetVariable.oclIsTypeOf(eCModel::Service)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:getInteraction">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Execution" referenceName="executions" variableName="newExecution">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="owner" valueExpression="var:targetVariable"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.ExecutionEnd" referenceName="ends" variableName="newExecutionStartEnd">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="context" valueExpression="aql:newExecution.owner"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="execution" valueExpression="var:newExecution"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.ExecutionEnd" referenceName="ends" variableName="newExecutionFinishEnd">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="context" valueExpression="aql:newExecution.owner"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="execution" valueExpression="var:newExecution"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newExecution">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: super_ssd.name + 'Execution' + super_ssd.executions->size()"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newExecutionStartEnd">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: newExecution.name + 'StartEnd'"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newExecutionFinishEnd">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: newExecution.name + 'FinishEnd'"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newExecution">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="start" valueExpression="var:newExecutionStartEnd"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="end" valueExpression="var:newExecutionFinishEnd"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.CallMessage" referenceName="messages" variableName="newMessage">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:super_ssd.name + 'CallMessage' + super_ssd.messages->size()"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="receivingEnd" valueExpression="aql:newExecutionStartEnd"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.MessageEnd" referenceName="ends" variableName="newsendingEnd">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="context" valueExpression="var:sourceVariable"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="message" valueExpression="var:newMessage"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newMessage">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="sendingEnd" valueExpression="var:newsendingEnd"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newsendingEnd">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newMessage.name + 'SendingEnd'"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:targetVariable">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Operation" referenceName="operation" variableName="newCallMessageOperation">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="expressions::BooleanLiteralExp" variableName="isChecked">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:isChecked">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="booleanSymbol" valueExpression="aql:true"/>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="CallMessage Parameters">
                          <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                            <initialOperation/>
                          </buttons>
                          <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:super_ssd">
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:isChecked.booleanSymbol = true">
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.ReturnMessage" referenceName="messages" variableName="newReturnMessage">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="sendingEnd" valueExpression="aql:newExecution.end"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="invocationMessage" valueExpression="aql:newExecution.start.eInverse(eCModel::Message)->first()"/>
                                  </subModelOperations>
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.MessageEnd" referenceName="ends" variableName="newReceivingEnd">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="context" valueExpression="var:sourceVariable"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="message" valueExpression="var:newReturnMessage"/>
                                  </subModelOperations>
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newReturnMessage">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newExecution.start.eInverse(eCModel::Message)->first().name + 'Return'"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="receivingEnd" valueExpression="var:newReceivingEnd"/>
                                  </subModelOperations>
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newReceivingEnd">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newReturnMessage.name + 'ReceivingEnd'"/>
                                  </subModelOperations>
                                </subModelOperations>
                              </firstModelOperations>
                            </initialOperation>
                          </buttons>
                          <page name="Default Page" labelExpression="Create a new CallMessage" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Call']/@initialOperation/@firstModelOperations/@subModelOperations.1/@subModelOperations.0/@subModelOperations.11/@subModelOperations.0/@subModelOperations.1/@groups.0"/>
                          <groups name="Default Group" labelExpression="CallMessage Parameters" semanticCandidateExpression="var:self">
                            <controls xsi:type="properties:TextDescription" labelExpression="System Operation Name:" valueExpression="aql:newCallMessageOperation.name">
                              <initialOperation>
                                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newCallMessageOperation">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newValue"/>
                                </firstModelOperations>
                              </initialOperation>
                            </controls>
                            <controls xsi:type="properties:CheckboxDescription" name="isCheck" labelExpression="Create a Default ReturnMessage for CallMessage" valueExpression="aql:isChecked.booleanSymbol">
                              <initialOperation>
                                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:isChecked">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="booleanSymbol" valueExpression="var:newValue"/>
                                  <subModelOperations xsi:type="tool_1:ExternalJavaAction" name="Show variables" id="org.eclipse.sirius.business.api.action.printVariables">
                                    <parameters name="title" value="Execution creation"/>
                                    <parameters name="enabled" value="aql:true"/>
                                  </subModelOperations>
                                </firstModelOperations>
                              </initialOperation>
                            </controls>
                          </groups>
                        </subModelOperations>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newMessage">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="op" valueExpression="aql:newCallMessageOperation"/>
                        <subModelOperations xsi:type="tool_1:ExternalJavaAction" name="Show variables" id="org.eclipse.sirius.business.api.action.printVariables">
                          <parameters name="title" value="Execution creation"/>
                          <parameters name="enabled" value="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:isChecked.booleanSymbol = true">
                      <subModelOperations xsi:type="tool_1:ExternalJavaAction" name="Move ReceivingEnd" id="org.eclipse.sirius.business.api.action.moveElement">
                        <parameters name="referenceOwner" value="var:self"/>
                        <parameters name="referenceName" value="ends"/>
                        <parameters name="element" value="var:newReceivingEnd"/>
                        <parameters name="predecessor" value="aql:startingEndPredecessor.semanticEnd"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:isChecked">
                        <subModelOperations xsi:type="tool_1:RemoveElement"/>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:ExternalJavaAction" name="Move ExecutionFinishEnd" id="org.eclipse.sirius.business.api.action.moveElement">
                      <parameters name="referenceOwner" value="var:self"/>
                      <parameters name="referenceName" value="ends"/>
                      <parameters name="element" value="var:newExecutionFinishEnd"/>
                      <parameters name="predecessor" value="aql:startingEndPredecessor.semanticEnd"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:ExternalJavaAction" name="Move ExecutionStartEnd" id="org.eclipse.sirius.business.api.action.moveElement">
                      <parameters name="referenceOwner" value="var:self"/>
                      <parameters name="referenceName" value="ends"/>
                      <parameters name="element" value="var:newExecutionStartEnd"/>
                      <parameters name="predecessor" value="aql:startingEndPredecessor.semanticEnd"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:ExternalJavaAction" name="Move sendingEnd" id="org.eclipse.sirius.business.api.action.moveElement">
                      <parameters name="referenceOwner" value="var:self"/>
                      <parameters name="referenceName" value="ends"/>
                      <parameters name="element" value="var:newsendingEnd"/>
                      <parameters name="predecessor" value="aql:startingEndPredecessor.semanticEnd"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:false">
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="ends" valueExpression="service:reOrderEndForCallMessage(newExecution, newsendingEnd)"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:false">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:targetVariable.eContainer(eCModel::Interaction)">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.CallMessage" referenceName="messages" variableName="newMessage">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:super_ssd.name + 'CallMessage' + super_ssd.messages->size()"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="receivingEnd" valueExpression="aql:targetVariable.start"/>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: targetVariable.owner">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Operation" referenceName="operation" variableName="newCallMessageOperation">
                          <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="CallMessage Parameters">
                            <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                              <initialOperation/>
                            </buttons>
                            <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                              <initialOperation/>
                            </buttons>
                            <page name="Default Page" labelExpression="Page" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Call']/@initialOperation/@firstModelOperations/@subModelOperations.2/@subModelOperations.0/@subModelOperations.0/@subModelOperations.2/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                            <groups name="Default Group" labelExpression="Group" semanticCandidateExpression="var:self">
                              <controls xsi:type="properties:TextDescription" labelExpression="New Operation Name:" valueExpression="aql:newCallMessageOperation.name">
                                <initialOperation>
                                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newCallMessageOperation">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newValue"/>
                                  </firstModelOperations>
                                </initialOperation>
                              </controls>
                            </groups>
                          </subModelOperations>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newMessage">
                          <subModelOperations xsi:type="tool_1:SetValue" featureName="op" valueExpression="aql:newCallMessageOperation"/>
                          <subModelOperations xsi:type="tool_1:ExternalJavaAction" name="Show variables" id="org.eclipse.sirius.business.api.action.printVariables">
                            <parameters name="title" value="Execution creation"/>
                            <parameters name="enabled" value="aql:true"/>
                          </subModelOperations>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.MessageEnd" referenceName="ends" variableName="newsendingEnd">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="context" valueExpression="var:sourceVariable"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="message" valueExpression="var:newMessage"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newMessage">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="sendingEnd" valueExpression="var:newsendingEnd"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:targetVariable.eContainer(eCModel::Interaction).name + 'CallMessage' + targetVariable.eContainer(eCModel::Interaction).messages->size()"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newsendingEnd">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newMessage.name + 'SendingEnd'"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="ends" valueExpression="service:reOrderEndForCallMessage(targetVariable, newsendingEnd)"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:ExternalJavaAction" name="Show variables" id="org.eclipse.sirius.business.api.action.printVariables">
                      <parameters name="title" value="Execution creation"/>
                      <parameters name="enabled" value="aql:true"/>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:targetVariable">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Operation" referenceName="operation" variableName="newCallMessageOperation">
                        <subModelOperations xsi:type="tool_1:CreateInstance" typeName="expressions::BooleanLiteralExp" variableName="isChecked"/>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="booleanSymbol" valueExpression="aql:true"/>
                        <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="CallMessage Parameters">
                          <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                            <initialOperation/>
                          </buttons>
                          <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                            <initialOperation>
                              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:super_ssd">
                                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:isChecked.booleanSymbol = true">
                                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="isChecked is true">
                                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                                      <initialOperation/>
                                    </buttons>
                                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                                      <initialOperation/>
                                    </buttons>
                                    <page name="Default Page" labelExpression="Page" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Call']/@initialOperation/@firstModelOperations/@subModelOperations.2/@subModelOperations.0/@subModelOperations.6/@subModelOperations.0/@subModelOperations.2/@buttons.1/@initialOperation/@firstModelOperations/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                                    <groups name="Default Group" labelExpression="Group" semanticCandidateExpression="var:self"/>
                                  </subModelOperations>
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.ReturnMessage" referenceName="messages" variableName="newReturnMessage">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="sendingEnd" valueExpression="aql:newExecution.end"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="invocationMessage" valueExpression="aql:newExecution.start.eInverse(eCModel::Message)->first()"/>
                                  </subModelOperations>
                                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.MessageEnd" referenceName="ends" variableName="newReceivingEnd">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="context" valueExpression="var:sourceVariable"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="message" valueExpression="var:newReturnMessage"/>
                                  </subModelOperations>
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newReturnMessage">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newExecution.start.eInverse(eCModel::Message)->first().name + 'Return'"/>
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="receivingEnd" valueExpression="var:newReceivingEnd"/>
                                  </subModelOperations>
                                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newReceivingEnd">
                                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newReturnMessage.name + 'ReceivingEnd'"/>
                                  </subModelOperations>
                                </subModelOperations>
                              </firstModelOperations>
                            </initialOperation>
                          </buttons>
                          <page name="Default Page" labelExpression="Create a new CallMessage" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='Call']/@initialOperation/@firstModelOperations/@subModelOperations.2/@subModelOperations.0/@subModelOperations.6/@subModelOperations.0/@subModelOperations.2/@groups.0"/>
                          <groups name="Default Group" labelExpression="CallMessage Parameters" semanticCandidateExpression="var:self">
                            <controls xsi:type="properties:TextDescription" labelExpression="System Operation Name:" valueExpression="aql:newCallMessageOperation.name">
                              <initialOperation>
                                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newCallMessageOperation">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newValue"/>
                                </firstModelOperations>
                              </initialOperation>
                            </controls>
                            <controls xsi:type="properties:CheckboxDescription" name="isCheck" labelExpression="Create a Default ReturnMessage for CallMessage" valueExpression="aql:isChecked.booleanSymbol">
                              <initialOperation>
                                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:isChecked">
                                  <subModelOperations xsi:type="tool_1:SetValue" featureName="booleanSymbol" valueExpression="var:newValue"/>
                                  <subModelOperations xsi:type="tool_1:ExternalJavaAction" name="Show variables" id="org.eclipse.sirius.business.api.action.printVariables">
                                    <parameters name="title" value="Execution creation"/>
                                    <parameters name="enabled" value="aql:true"/>
                                  </subModelOperations>
                                </firstModelOperations>
                              </initialOperation>
                            </controls>
                          </groups>
                        </subModelOperations>
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="booleanSymbol" valueExpression="aql:true"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newMessage">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="op" valueExpression="aql:newCallMessageOperation"/>
                        <subModelOperations xsi:type="tool_1:ExternalJavaAction" name="Show variables" id="org.eclipse.sirius.business.api.action.printVariables">
                          <parameters name="title" value="Execution creation"/>
                          <parameters name="enabled" value="aql:true"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="CallMessageDelete" label="CallMessage">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eInverse(eCModel::ReturnMessage)->first()">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self &lt;> null">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="feature:receivingEnd">
                      <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsTypeOf(eCModel::MessageEnd) or (self.oclIsTypeOf(eCModel::ExecutionEnd) and self.execution = null)">
                        <subModelOperations xsi:type="tool_1:RemoveElement"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="feature:sendingEnd">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsTypeOf(eCModel::MessageEnd) or (self.oclIsTypeOf(eCModel::ExecutionEnd) and self.execution = null)">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="feature:receivingEnd">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsTypeOf(eCModel::ExecutionEnd) and self.execution &lt;> null">
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="feature:execution">
                      <subModelOperations xsi:type="tool_1:RemoveElement"/>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="feature:start">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(eCModel::ExecutionEnd) or (self.oclIsKindOf(eCModel::MessageEnd) and self.message = null)">
                          <subModelOperations xsi:type="tool_1:RemoveElement"/>
                        </subModelOperations>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="feature:end">
                        <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsKindOf(eCModel::ExecutionEnd) or (self.oclIsKindOf(eCModel::MessageEnd) and self.message = null)">
                          <subModelOperations xsi:type="tool_1:RemoveElement"/>
                        </subModelOperations>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_2:MessageCreationTool" name="ReturnMessage" edgeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@edgeMappings[name='ReturnMessage']">
            <sourceVariable name="sourceVariable"/>
            <targetVariable name="targetVariable"/>
            <sourceViewVariable name="sourceViewVariable"/>
            <targetViewVariable name="targetViewVariable"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:sourceVariable.eContainer(eCModel::Interaction)">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.ReturnMessage" referenceName="messages" variableName="newReturnMessage">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="sendingEnd" valueExpression="aql:sourceVariable.end"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="invocationMessage" valueExpression="aql:sourceVariable.start.eInverse(eCModel::Message)->first()"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.MessageEnd" referenceName="ends" variableName="newReceivingEnd">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="context" valueExpression="var:targetVariable"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="message" valueExpression="var:newReturnMessage"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newReturnMessage">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:sourceVariable.start.eInverse(eCModel::Message)->first().name + 'Return'"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="receivingEnd" valueExpression="var:newReceivingEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newReceivingEnd">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newReturnMessage.name + 'ReceivingEnd'"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ExternalJavaAction" name="Move ReceivingEnd" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="aql:sourceVariable.eContainer(eCModel::Interaction)"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="aql:newReceivingEnd"/>
                  <parameters name="predecessor" value="aql:sourceVariable.end"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="ReturnMessageDelete" label="ReturnMessage">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="feature:receivingEnd">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self.oclIsTypeOf(eCModel::MessageEnd) or (self.oclIsTypeOf(eCModel::ExecutionEnd) and self.execution = null)">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_2:ReorderTool">
            <startingEndPredecessorBefore name="startingEndPredecessorBefore"/>
            <startingEndPredecessorAfter name="startingEndPredecessorAfter"/>
            <finishingEndPredecessorBefore name="finishingEndPredecessorBefore"/>
            <finishingEndPredecessorAfter name="finishingEndPredecessorAfter"/>
            <onEventMovedOperation/>
          </ownedTools>
        </toolSections>
        <toolSections name="CombinedFragment">
          <ownedTools xsi:type="tool_2:CombinedFragmentCreationTool" name="CombinedFragmentCreate" label="Combined Fragment" containerMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@containerMappings[name='Combined%20Fragment']">
            <variable name="variable"/>
            <viewVariable name="viewVariable"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:getInteraction()">
                <subModelOperations xsi:type="tool_1:ExternalJavaAction" name="Show variables" id="org.eclipse.sirius.business.api.action.printVariables">
                  <parameters name="title" value="Execution creation"/>
                  <parameters name="enabled" value="aql:false"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.CombinedFragment" referenceName="combinedFragments" variableName="newCF">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'combinedFragement' + (variable.eContents(eCModel::CombinedFragment)->size())"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="operator" valueExpression="alt"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="coveredParticipants" valueExpression="var:coveredLifelines"/>
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Operand" referenceName="ownedOperands" variableName="newOperand">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'condition' + (variable.eAllContents(eCModel::Operand)->size())"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.CombinedFragmentEnd" referenceName="ends" variableName="startCF">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newCF.name +  'StartEnd' "/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="owner" valueExpression="var:newCF"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.OperandEnd" referenceName="ends" variableName="newOpEnd">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newOperand.name + 'End'"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="owner" valueExpression="var:newOperand"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.CombinedFragmentEnd" referenceName="ends" variableName="finishCF">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:newCF.name + 'FinishEnd' "/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="owner" valueExpression="var:newCF"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newCF">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="start" valueExpression="var:startCF"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="finish" valueExpression="var:finishCF"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="ownedOperands" valueExpression="var:newOperand"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newOperand">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="finish" valueExpression="var:finishCF"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="start" valueExpression="var:newOpEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:SetValue" featureName="ends" valueExpression="service:reOrderEndForCreateCombinedFragment(startingEndPredecessor, finishingEndPredecessor, startCF, newOpEnd, finishCF)"/>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:testMore(startingEndPredecessor)">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:false">
                    <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="New Dialog">
                      <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                        <initialOperation/>
                      </buttons>
                      <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                        </initialOperation>
                      </buttons>
                      <page name="Default Page" labelExpression="Page" semanticCandidateExpression="var:self" groups="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.1/@ownedTools[name='CombinedFragmentCreate']/@initialOperation/@firstModelOperations/@subModelOperations.8/@subModelOperations.0/@subModelOperations.0/@groups.0"/>
                      <groups name="Default Group" labelExpression="Group" semanticCandidateExpression="var:self">
                        <controls xsi:type="properties:LabelDescription" name="StartingEndPre" labelExpression="StartingEndPre" displayExpression="aql:startingEndPredecessor.semanticEnd.name"/>
                        <controls xsi:type="properties:LabelDescription" name="finishingEndPre" labelExpression="finishingEndPre" displayExpression="aql:finishingEndPredecessor.semanticEnd.name"/>
                        <controls xsi:type="properties:ListDescription" labelExpression="EndList" helpExpression="sss" valueExpression="aql:self.ends" displayExpression="aql:value.name">
                          <onClickOperation>
                            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                          </onClickOperation>
                        </controls>
                        <controls xsi:type="properties:ListDescription" labelExpression="FinalEnds" helpExpression="sss" valueExpression="aql:let flist = self.ends->excluding(startCF)->insertAt(self.ends->excluding(startCF)->indexOf(startingEndPredecessor.semanticEnd)+1, startCF) in flist->excluding(newOpEnd)->insertAt(flist->excluding(newOpEnd)->indexOf(startingEndPredecessor.semanticEnd)+2, newOpEnd)" displayExpression="aql:value.name">
                          <onClickOperation>
                            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
                          </onClickOperation>
                        </controls>
                      </groups>
                    </subModelOperations>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ends" valueExpression="service:reOrderEndForCreateCombinedFragment(startingEndPredecessor, finishingEndPredecessor, startCF, newOpEnd, finishCF)"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="service:testMore(variable)"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
            <coveredLifelines name="coveredLifelines"/>
          </ownedTools>
          <ownedTools xsi:type="tool_2:OperandCreationTool" name="Operand" containerMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@containerMappings[name='Combined%20Fragment']/@subContainerMappings[name='Operand']">
            <variable name="container"/>
            <viewVariable name="viewVariable"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.eContainerOrSelf(eCModel::Interaction)">
                <subModelOperations xsi:type="tool_1:ExternalJavaAction" name="Show variables" id="org.eclipse.sirius.business.api.action.printVariables">
                  <parameters name="title" value="Execution creation"/>
                  <parameters name="enabled" value="aql:false"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:container.eContainerOrSelf(eCModel::CombinedFragment)">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Operand" referenceName="ownedOperands" variableName="newOperand">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'condition' + (container.eContainer().eAllContents(eCModel::Operand)->size()+1)"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.OperandEnd" referenceName="ends" variableName="newOpEnd">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql: newOperand.name + 'End'"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="owner" valueExpression="var:newOperand"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:newOperand">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="start" valueExpression="var:newOpEnd"/>
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="finish" valueExpression="aql:container.finish"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:let cf = container.eContainerOrSelf(eCModel::CombinedFragment).ownedOperands in if cf->size() > 1 then cf->at(cf->size()-1) else finishinggEndPredecessor.semanticEnd endif">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="finish" valueExpression="var:newOpEnd"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ExternalJavaAction" name="Move operand start end" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="var:self"/>
                  <parameters name="referenceName" value="ends"/>
                  <parameters name="element" value="var:newOpEnd"/>
                  <parameters name="predecessor" value="aql:startingEndPredecessor.semanticEnd"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <startingEndPredecessor name="startingEndPredecessor"/>
            <finishingEndPredecessor name="finishingEndPredecessor"/>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="OperandDelete" label="Operand">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:let cf = element.eContainerOrSelf(eCModel::CombinedFragment).ownedOperands in if cf->size() > 1 then cf->at(cf->size()-1) else null endif">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:self &lt;> null">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="finish" valueExpression="aql:element.finish"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="feature:start">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DeleteElementDescription" name="CombinedFragementDelete" label="CombinedFragement">
            <element name="element"/>
            <elementView name="elementView"/>
            <containerView name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:element">
                <subModelOperations xsi:type="tool_1:ExternalJavaAction" name="Show variables" id="org.eclipse.sirius.business.api.action.printVariables">
                  <parameters name="title" value="Execution creation"/>
                  <parameters name="enabled" value="aql:true"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="feature:operator">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="feature:start">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="feature:finish">
                  <subModelOperations xsi:type="tool_1:RemoveElement"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:For" expression="aql:self.ownedOperands" iteratorName="op">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:op.start">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:op">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:RemoveElement"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Ohters">
          <ownedTools xsi:type="tool:DoubleClickDescription" name="openSSDEEF" forceRefresh="true" mappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@nodeMappings[name='Participant'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@edgeMappings[name='CallMessage'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@containerMappings[name='Combined%20Fragment'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@edgeMappings[name='ReturnMessage'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@nodeMappings[name='Participant']/@borderedNodeMappings[name='Lifeline']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ExternalJavaAction" name="Open EEF Wizard Action" id="org.eclipse.sirius.eef.actions.openPropertiesWizard"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ExternalJavaAction" name="Move finishingEnd" id="org.eclipse.sirius.business.api.action.moveElement">
            <parameters name="referenceOwner" value="service:getInteraction"/>
            <parameters name="referenceName" value="ends"/>
            <parameters name="element" value="var:newExecutionFinishEnd"/>
            <parameters name="predecessor" value="aql:finishingEndPredecessor.semanticEnd"/>
          </ownedTools>
          <ownedTools xsi:type="tool_1:ExternalJavaAction" name="Move startingEnd" id="org.eclipse.sirius.business.api.action.moveElement">
            <parameters name="referenceOwner" value="var:self"/>
            <parameters name="referenceName" value="ends"/>
            <parameters name="element" value="var:newExecutionStartEnd"/>
            <parameters name="predecessor" value="aql:startingEndPredecessor.semanticEnd"/>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="AD" label="Activity Diagram" domainClass="eCModel.Workflow" enablePopupBars="true">
      <layout xsi:type="description_1:CompositeLayout"/>
      <defaultLayer name="Default">
        <edgeMappings name="LoopToInternalAction" preconditionExpression="aql:self.oclIsTypeOf(eCModel::LoopExp)" sourceMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subNodeMappings[name='AD_Loop']" targetMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subContainerMappings[name='AD_Action']" targetFinderExpression="aql:self.eAllContents(eCModel::SimpleOperation)->first()">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="yes">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="InternalActionToLoop" preconditionExpression="aql:self.eContainer().eContents(eCModel::WorkflowExp)->last() == self" sourceMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subContainerMappings[name='AD_Action']" targetMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subNodeMappings[name='AD_Loop']" targetFinderExpression="aql:self.eContainer(eCModel::LoopExp)">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="CaseActionToOutAction" preconditionExpression="aql:self.eContainer().oclIsTypeOf(eCModel::SwitchCase)" sourceMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subContainerMappings[name='AD_Action']" targetMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subContainerMappings[name='AD_Action'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subNodeMappings[name='ActivityFinal'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subNodeMappings[name='AD_Loop']" targetFinderExpression="aql:self.eContainer().eContainer().followingSiblings()->first()">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="InitialNodeToAction" preconditionExpression="aql:self.oclIsTypeOf(eCModel::InitalNode)" sourceMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subNodeMappings[name='InitialNode']" targetMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subContainerMappings[name='AD_Action']" targetFinderExpression="aql:self.followingSiblings(eCModel::SimpleOperation)->first()">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="CaseToInternalAction" sourceMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subNodeMappings[name='AD_Case']" targetMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subContainerMappings[name='AD_Action']" targetFinderExpression="aql:self.op" sourceFinderExpression="aql:self.eContainer()" domainClass="eCModel.SwitchCase" useDomainElement="true">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12" showIcon="false" labelExpression="feature:caseValue">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ForkNodeToAction" sourceMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subNodeMappings[name='AD_ForkNode']" targetMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subContainerMappings[name='AD_Action']" targetFinderExpression="aql:self.eContainer().eAllContents(eCModel::SimpleOperation)->select(so | self.startlinks->includes(so.ref))">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ActionToJoinNode" sourceMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subNodeMappings[name='AD_JoinNode']" targetMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subContainerMappings[name='AD_Action']" targetFinderExpression="aql:self.eContainer().eAllContents(eCModel::SimpleOperation)->select(so | self.endlinks->includes(so.ref))">
          <style sourceArrow="InputArrow" targetArrow="NoDecoration" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ForkNodeToCondition" sourceMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subNodeMappings[name='AD_ForkNode']" targetMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subNodeMappings[name='AD_Case'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subNodeMappings[name='AD_Loop']" targetFinderExpression="aql:self.startlinks->filter(eCModel::ComplexOpeartion)">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="JoinNodeToCondition" sourceMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subNodeMappings[name='AD_JoinNode']" targetMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subNodeMappings[name='AD_Loop']" targetFinderExpression="aql:self.endlinks->filter(eCModel::LoopExp)">
          <style sourceArrow="InputArrow" targetArrow="NoDecoration" sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ActionToAction" preconditionExpression="aql:self.eContainer().eAllContents(eCModel::ForkNode).startlinks->excludes(self.ref) and self.eContainer().eAllContents(eCModel::JoinNode).endlinks->excludes(self)" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subContainerMappings[name='AD_Action'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subNodeMappings[name='AD_Loop'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subNodeMappings[name='AD_JoinNode']" targetMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subContainerMappings[name='AD_Action'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subNodeMappings[name='ActivityFinal'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subNodeMappings[name='AD_Loop'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subNodeMappings[name='AD_Case'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subNodeMappings[name='AD_ForkNode']" targetFinderExpression="aql:self.followingSiblings()->first()" reconnections="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@toolSections.1/@ownedTools[name='ActionToActionTargetReconnect']">
          <style sizeComputationExpression="2" endsCentering="Both">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings name="ActionToPartitionAction" sourceMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subContainerMappings[name='AD_Action']" targetMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subContainerMappings[name='AD_Action']" targetFinderExpression="aql:self.eContainer().eContainer().partitions->any(p|p.name = self.action).exps->filter(eCModel::SimpleOperation)->select(e | e.ref = self.action)" sourceFinderExpression="aql:self.precedingSiblings(eCModel::SimpleOperation)->last()" domainClass="eCModel.PartitionAction" useDomainElement="true">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="AD_Partition" semanticCandidatesExpression="aql:self.partitions" synchronizationLock="true" domainClass="eCModel.Partition">
          <subNodeMappings name="AD_Loop" semanticCandidatesExpression="aql:self.exps->filter(eCModel::LoopExp)" domainClass="eCModel.LoopExp">
            <style xsi:type="style:LozengeNodeDescription" borderSizeComputationExpression="2" labelSize="10" showIcon="false" labelPosition="node" resizeKind="NSEW" widthComputationExpression="10" heightComputationExpression="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="ActivityFinal" semanticCandidatesExpression="aql:self.exps->filter(eCModel::ActivityFinal)" domainClass="eCModel.ActivityFinal">
            <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="" labelPosition="node" arcWidth="0" arcHeight="0" workspacePath="/net.mydreamy.requirementmodel.design/images/FinalNode.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="InitialNode" semanticCandidatesExpression="aql:self.exps->filter(eCModel::InitalNode)" domainClass="eCModel.InitalNode">
            <style xsi:type="style:WorkspaceImageDescription" showIcon="false" labelExpression="" labelPosition="node" arcWidth="0" arcHeight="0" roundedCorner="true" workspacePath="/net.mydreamy.requirementmodel.design/images/InitNode.png">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="AD_Case" semanticCandidatesExpression="aql:self.exps->filter(eCModel::SwitchExp)" domainClass="eCModel.SwitchExp">
            <style xsi:type="style:LozengeNodeDescription" borderSizeComputationExpression="2" labelSize="10" showIcon="false" labelPosition="node" resizeKind="NSEW" widthComputationExpression="10" heightComputationExpression="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="AD_ForkNode" semanticCandidatesExpression="aql:self.exps->filter(eCModel::ForkNode)" domainClass="eCModel.ForkNode">
            <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="" labelPosition="node" resizeKind="NSEW" width="10" height="1">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="AD_JoinNode" semanticCandidatesExpression="aql:self.exps->filter(eCModel::JoinNode)" domainClass="eCModel.JoinNode">
            <style xsi:type="style:SquareDescription" showIcon="false" labelExpression="" labelPosition="node" resizeKind="NSEW" width="10" height="1">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_purple']"/>
            </style>
          </subNodeMappings>
          <subContainerMappings name="AD_Action" label="Action" semanticCandidatesExpression="aql:self.eAllContents()->filter(eCModel::SimpleOperation)" domainClass="eCModel.SimpleOperation">
            <style xsi:type="style:FlatContainerStyleDescription" arcWidth="25" arcHeight="25" borderSizeComputationExpression="1" labelSize="10" showIcon="false" labelExpression="aql:self.ref.name" roundedCorner="true" widthComputationExpression="12" heightComputationExpression="5" backgroundStyle="Liquid">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
              <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
          </subContainerMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="13" showIcon="false" labelExpression="aql:self.name.name">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <labelBorderStyle href="environment:/viewpoint#//@labelBorderStyles/@labelBorderStyleDescriptions.1"/>
          </style>
        </containerMappings>
        <toolSections name="AD_Nodes" label="Node">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="InitialNodeCreate" label="InitalNode" nodeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subNodeMappings[name='InitialNode']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.InitalNode" referenceName="exps">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="ActivityStart"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="ActivityFinalCreate" label="AcitivityFinal" nodeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subNodeMappings[name='ActivityFinal']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.ActivityFinal" referenceName="exps">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="ActivityFinal"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="ActionCreate" label="Action" containerMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subContainerMappings[name='AD_Action']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.SimpleOperation" referenceName="exps" variableName="newAction">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="ref" valueExpression="aql:container.siblings().eAllContents(eCModel::Operation)->first()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ToolGroup" name="DecisionNodeGroup">
            <tools xsi:type="tool:NodeCreationDescription" name="AD_Loop_Create" label="DecisionNodeLoop" nodeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subNodeMappings[name='AD_Loop']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.LoopExp" referenceName="exps" variableName="newLoop">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="condition" valueExpression="NewCondition"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
            <tools xsi:type="tool:NodeCreationDescription" name="AD_Case_Create" label="DecisionNode" nodeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@containerMappings[name='AD_Partition']/@subNodeMappings[name='AD_Case']">
              <variable name="container"/>
              <viewVariable name="containerView"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.SwitchExp" referenceName="exps" variableName="newSwitch">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="newCondition"/>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </tools>
          </ownedTools>
        </toolSections>
        <toolSections name="AD_Relations" label="Relation">
          <ownedTools xsi:type="tool:EdgeCreationDescription" name="ActionToActionCreate" label="ControlFlow" edgeMappings="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='AD']/@defaultLayer/@edgeMappings[name='InternalActionToLoop']">
            <sourceVariable name="source"/>
            <targetVariable name="target"/>
            <sourceViewVariable name="sourceView"/>
            <targetViewVariable name="targetView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:target">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:source.oclIsTypeOf(eCModel::SimpleOperation) and target.oclIsTypeOf(eCModel::LoopExp)">
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:source.siblings()->indexOf(source.siblings(eCModel::LoopExp)->last()) &lt; source.siblings()->size()">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="exps" valueExpression="aql:target.exps->union(source.siblings()->subSequence(source.siblings()->indexOf(source.siblings(eCModel::LoopExp)->last())+1, source.siblings()->size())->including(source))"/>
                  </subModelOperations>
                  <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:source.siblings()->indexOf(source.siblings(eCModel::LoopExp)->last()) = source.siblings()->size()">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="exps" valueExpression="aql:target.exps->including(source)"/>
                  </subModelOperations>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:target.oclIsTypeOf(eCModel::SimpleOperation) and source.oclIsTypeOf(eCModel::SwitchExp)">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:source">
                    <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.SwitchCase" referenceName="cases" variableName="newCase">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="caseValue" valueExpression="aql: 'case' + source.cases->size()"/>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="op" valueExpression="aql:target"/>
                    </subModelOperations>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:ReconnectEdgeDescription" name="ActionToActionTargetReconnect">
            <source name="source"/>
            <target name="target"/>
            <sourceView name="sourceView"/>
            <targetView name="targetView"/>
            <element name="element"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element">
                <subModelOperations xsi:type="tool_1:ExternalJavaAction" name="Show variables" id="org.eclipse.sirius.business.api.action.printVariables">
                  <parameters name="title" value="ActionToActionTargetReconnect"/>
                  <parameters name="enabled" value="aql:false"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ExternalJavaAction" name="MoveRelationActionToAction" id="org.eclipse.sirius.business.api.action.moveElement">
                  <parameters name="referenceOwner" value="aql:element.eContainer()"/>
                  <parameters name="referenceName" value="exps"/>
                  <parameters name="element" value="aql:target"/>
                  <parameters name="predecessor" value="aql:element"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:element.eContainer()">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.SimpleOperation" referenceName="exps">
                    <subModelOperations xsi:type="tool_1:RemoveElement"/>
                  </subModelOperations>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
            <edgeView name="edgeView"/>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_3:EditionTableDescription" name="Requirements Overview" domainClass="eCModel::RequirementModel">
      <ownedLineMappings name="UseCaseModel" domainClass="eCModel::UseCaseModel" semanticCandidatesExpression="feature:UseCaseModel" headerLabelExpression="UseCaseModel"/>
      <ownedLineMappings name="DomainModel" domainClass="eCModel::DomainModel" semanticCandidatesExpression="feature:DomainModel" headerLabelExpression="DomainModel"/>
      <ownedColumnMappings name="ActorCol" headerLabelExpression="Actor" featureName="actor" labelExpression="aql:self.actor->size()">
        <defaultForeground labelSize="13">
          <labelFormat>bold</labelFormat>
          <foreGroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
        </defaultForeground>
      </ownedColumnMappings>
      <ownedColumnMappings name="UseCaseCol" headerLabelExpression="UseCase" featureName="uc" labelExpression="aql:self.uc->size()">
        <defaultForeground labelSize="13">
          <labelFormat>bold</labelFormat>
          <foreGroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
        </defaultForeground>
      </ownedColumnMappings>
      <ownedColumnMappings name="SysOpCol" headerLabelExpression="System Operation" featureName="contract" labelExpression="aql:self.contract->size()">
        <defaultForeground labelSize="13">
          <labelFormat>bold</labelFormat>
          <foreGroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
        </defaultForeground>
      </ownedColumnMappings>
      <ownedColumnMappings name="EntityClassCol" headerLabelExpression="Entity Class" featureName="entity" labelExpression="aql:self.entity->size()">
        <defaultForeground labelSize="13">
          <labelFormat>bold</labelFormat>
          <foreGroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
        </defaultForeground>
      </ownedColumnMappings>
      <ownedColumnMappings name="AttributeCol" headerLabelExpression="Attribute" featureName="entity" labelExpression="aql:self.entity.attributes->size()">
        <defaultForeground labelSize="13">
          <labelFormat>bold</labelFormat>
          <foreGroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
        </defaultForeground>
      </ownedColumnMappings>
      <ownedColumnMappings name="AssociationCol" headerLabelExpression="Association" featureName="entity" labelExpression="aql:self.entity.reference->size()">
        <defaultForeground labelSize="13">
          <labelFormat>bold</labelFormat>
          <foreGroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
        </defaultForeground>
      </ownedColumnMappings>
      <ownedColumnMappings name="InvariantCol" headerLabelExpression="Invariant" featureName="entity" labelExpression="aql:self.entity.invariance->size()">
        <defaultForeground labelSize="13">
          <labelFormat>bold</labelFormat>
          <foreGroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
        </defaultForeground>
      </ownedColumnMappings>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="zzy diagram" domainClass="eCModel.UseCaseModel" enablePopupBars="true">
      <defaultLayer name="Defaults">
        <edgeMappings name="zzyRelation" sourceMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='zzy%20diagram']/@defaultLayer/@containerMappings[name='zzyContainer']/@subNodeMappings[name='zzyNode']" targetMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='zzy%20diagram']/@defaultLayer/@containerMappings[name='zzyContainer']/@subNodeMappings[name='zzyUCNode']" targetFinderExpression="feature:uc">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            <centerLabelStyleDescription labelSize="12">
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <containerMappings name="zzyContainer" domainClass="eCModel.UseCaseModel">
          <subNodeMappings name="zzyUCNode" semanticCandidatesExpression="feature:eAllContents" domainClass="eCModel.UC">
            <style xsi:type="style:LozengeNodeDescription" labelSize="12" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='gray']"/>
            </style>
          </subNodeMappings>
          <subNodeMappings name="zzyNode" domainClass="eCModel.Actor">
            <style xsi:type="style:BundledImageDescription" labelSize="10" labelAlignment="LEFT" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:FlatContainerStyleDescription" borderSizeComputationExpression="1" labelSize="20" showIcon="false" labelExpression="aql: if self.label = null then self.name else self.label.substring(2,self.label.size()-1) endif">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <backgroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            <foregroundColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
          </style>
        </containerMappings>
        <toolSections/>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_2:SequenceDiagramDescription" name="CollaborationSequenceDiagram" domainClass="eCModel.Collaboration" preconditionExpression="aql:self.hello()" enablePopupBars="true" endsOrdering="aql:self.getEnds()" instanceRolesOrdering="aql:self.getLifelines()">
      <defaultLayer name="Default">
        <nodeMappings xsi:type="description_2:InstanceRoleMapping" name="CParticipant" semanticCandidatesExpression="aql:self.getLifelines()" semanticElements="var:self" synchronizationLock="true" domainClass="eCModel.CLifeline">
          <borderedNodeMappings xsi:type="description_2:ExecutionMapping" name="CLifeline" semanticCandidatesExpression="var:self" semanticElements="var:self" synchronizationLock="true" domainClass="eCModel.CLifeline" startingEndFinderExpression="var:self" finishingEndFinderExpression="var:self">
            <borderedNodeMappings xsi:type="description_2:ExecutionMapping" name="CExecution" semanticCandidatesExpression="aql:diagram.target.getExecutions(self)" synchronizationLock="true" domainClass="eCModel.CExecution" startingEndFinderExpression="feature:start" finishingEndFinderExpression="feature:finish">
              <style xsi:type="style:SquareDescription" borderSizeComputationExpression="1" showIcon="false" labelExpression="" resizeKind="NORTH_SOUTH" width="1" height="6" color="//@userColorsPalettes[name='Dutch%20Seas']/@entries[name='Glint%20on%20the%20ocean']">
                <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
                <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              </style>
            </borderedNodeMappings>
            <style xsi:type="style:SquareDescription" borderSizeComputationExpression="2" borderLineStyle="dot" showIcon="false" labelExpression="" resizeKind="NSEW" width="1" height="100">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='white']"/>
            </style>
          </borderedNodeMappings>
          <conditionnalStyles predicateExpression="aql:self.oclIsTypeOf(eCModel::Service)">
            <style xsi:type="style:SquareDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql: ':' + self.name" sizeComputationExpression="" labelPosition="node" resizeKind="NSEW" width="12" height="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.oclIsTypeOf(eCModel::Actor)">
            <style xsi:type="style:WorkspaceImageDescription" labelSize="12" showIcon="false" labelExpression="aql: ':' + self.name" resizeKind="NSEW" arcWidth="1" arcHeight="1" workspacePath="/net.mydreamy.requirementmodel.design/images/actor.svg">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='dark_blue']"/>
            </style>
          </conditionnalStyles>
          <conditionnalStyles predicateExpression="aql:self.oclIsTypeOf(eCModel::CLifeline)">
            <style xsi:type="style:SquareDescription" borderSizeComputationExpression="1" labelSize="12" showIcon="false" labelExpression="aql: ':' + self.name" sizeComputationExpression="" labelPosition="node" resizeKind="NSEW" width="12" height="5">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='light_blue']"/>
            </style>
          </conditionnalStyles>
        </nodeMappings>
        <edgeMappings xsi:type="description_2:BasicMessageMapping" name="CCallMessage" deletionDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='CallMessageDelete']" semanticCandidatesExpression="aql:self.getMessages()" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='CollaborationSequenceDiagram']/@defaultLayer/@nodeMappings[name='CParticipant']/@borderedNodeMappings[name='CLifeline'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='CollaborationSequenceDiagram']/@defaultLayer/@nodeMappings[name='CParticipant']/@borderedNodeMappings[name='CLifeline']/@borderedNodeMappings[name='CExecution']" targetMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='CollaborationSequenceDiagram']/@defaultLayer/@nodeMappings[name='CParticipant']/@borderedNodeMappings[name='CLifeline'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='CollaborationSequenceDiagram']/@defaultLayer/@nodeMappings[name='CParticipant']/@borderedNodeMappings[name='CLifeline']/@borderedNodeMappings[name='CExecution']" targetFinderExpression="feature:targetPoint" sourceFinderExpression="feature:sourcePoint" domainClass="eCModel.CMessage" useDomainElement="true" sendingEndFinderExpression="feature:sender" receivingEndFinderExpression="feature:receiver">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            <centerLabelStyleDescription labelSize="10" showIcon="false" labelExpression="aql:self.op.name + ' ('  + self.op.parameter.name->sep(', ') + ')'">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
        <edgeMappings xsi:type="description_2:BasicMessageMapping" name="CReturnMessage" deletionDescription="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='SequenceDiagram']/@defaultLayer/@toolSections.0/@ownedTools[name='CallMessageDelete']" semanticCandidatesExpression="aql:self.getReturnMessages()" synchronizationLock="true" sourceMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='CollaborationSequenceDiagram']/@defaultLayer/@nodeMappings[name='CParticipant']/@borderedNodeMappings[name='CLifeline'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='CollaborationSequenceDiagram']/@defaultLayer/@nodeMappings[name='CParticipant']/@borderedNodeMappings[name='CLifeline']/@borderedNodeMappings[name='CExecution']" targetMapping="//@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='CollaborationSequenceDiagram']/@defaultLayer/@nodeMappings[name='CParticipant']/@borderedNodeMappings[name='CLifeline'] //@ownedViewpoints[name='EdgeCloudModel']/@ownedRepresentations[name='CollaborationSequenceDiagram']/@defaultLayer/@nodeMappings[name='CParticipant']/@borderedNodeMappings[name='CLifeline']/@borderedNodeMappings[name='CExecution']" targetFinderExpression="feature:targetPoint" sourceFinderExpression="feature:sourcePoint" domainClass="eCModel.CMessage" useDomainElement="true" sendingEndFinderExpression="feature:sender" receivingEndFinderExpression="feature:receiver">
          <style sizeComputationExpression="2">
            <strokeColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='blue']"/>
            <centerLabelStyleDescription labelSize="10" showIcon="false" labelExpression="aql:self.op.name + ' ('  + self.op.parameter.name->sep(', ') + ')'">
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            </centerLabelStyleDescription>
          </style>
        </edgeMappings>
      </defaultLayer>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="org.zzy.sirius.services.SequenceDiagramServices"/>
    <ownedJavaExtensions qualifiedClassName="org.zzy.sirius.services.CollaborationServices"/>
  </ownedViewpoints>
  <userColorsPalettes name="Dutch Seas">
    <entries xsi:type="description:InterpolatedColor" name="Interpolated blue for Executions" colorValueComputationExpression="">
      <colorSteps>
        <associatedColor href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
      </colorSteps>
      <colorSteps>
        <associatedColor href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
      </colorSteps>
    </entries>
    <entries xsi:type="description:UserFixedColor" red="199" green="237" blue="232" name="Glint on the ocean"/>
    <entries xsi:type="description:UserFixedColor" red="22" green="147" blue="165" name="Dutch teal"/>
  </userColorsPalettes>
  <extensions xsi:type="properties:ViewExtensionDescription" name="Operations">
    <categories name="Default">
      <pages name="OperationPage" labelExpression="Operation" domainClass="eCModel.Operation" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.0 //@extensions.0/@categories.0/@groups.1"/>
      <groups name="OperationGroup" labelExpression="Operation" domainClass="eCModel.Operation" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription">
          <controls xsi:type="properties:TextDescription" name="EntityAttirbuteName" labelExpression="Operation Name:" valueExpression="feature:name">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:ContainerDescription">
            <controls xsi:type="properties:DynamicMappingForDescription" iterator="parameter" iterableExpression="aql:self.parameter" forceRefresh="true">
              <ifs predicateExpression="aql:true">
                <widget xsi:type="properties:TextDescription" name="PrimitiveAttirbuteName" labelExpression="Parameter:" valueExpression="aql:parameter.name">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:parameter">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
                    </firstModelOperations>
                  </initialOperation>
                  <style/>
                </widget>
              </ifs>
              <ifs predicateExpression="aql:true">
                <widget xsi:type="properties:ButtonDescription" buttonLabelExpression="Delete Parameter">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:parameter">
                      <subModelOperations xsi:type="tool_1:RemoveElement"/>
                    </firstModelOperations>
                  </initialOperation>
                </widget>
              </ifs>
            </controls>
            <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="2"/>
          </controls>
          <controls xsi:type="properties:ButtonDescription" buttonLabelExpression="Add Parameter">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Parameter" referenceName="parameter" variableName="newp">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="defaultValue"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </controls>
        </controls>
        <style barStyle="SHORT_TITLE_BAR" expandedByDefault="true"/>
      </groups>
      <groups name="hiddenGroup" labelExpression="Group" domainClass="eCModel.Parameter" semanticCandidateExpression="aql:self.parameter">
        <style barStyle="NO_TITLE" toggleStyle="NONE"/>
      </groups>
    </categories>
  </extensions>
  <extensions xsi:type="properties:ViewExtensionDescription" name="CallMessage">
    <categories name="Default">
      <pages name="CallMessage" labelExpression="CallMessage" domainClass="eCModel.CallMessage" semanticCandidateExpression="var:self" groups="//@extensions.1/@categories.0/@groups.0 //@extensions.1/@categories.0/@groups.1"/>
      <groups name="CallMessageOps" labelExpression="Target System Operation" domainClass="eCModel.CallMessage" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:SelectDescription" name="primetype" labelExpression="Selected Operation:" valueExpression="aql:self.op" candidatesExpression="aql:self.eCrossReferences()->filter(eCModel::ExecutionEnd).execution.owner.operation" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="op" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <style barStyle="SHORT_TITLE_BAR" expandedByDefault="true"/>
      </groups>
      <groups name="CallOperationGroup" labelExpression="Operation Signature" domainClass="eCModel.Operation" semanticCandidateExpression="aql:self.op">
        <controls xsi:type="properties:ContainerDescription">
          <controls xsi:type="properties:TextDescription" name="EntityAttirbuteName" labelExpression="Operation Name:" valueExpression="feature:name">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:ContainerDescription">
            <controls xsi:type="properties:DynamicMappingForDescription" iterator="parameter" iterableExpression="aql:self.parameter" forceRefresh="true">
              <ifs predicateExpression="aql:true">
                <widget xsi:type="properties:TextDescription" name="PrimitiveAttirbuteName" labelExpression="Parameter:" valueExpression="aql:parameter.name">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:parameter">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
                    </firstModelOperations>
                  </initialOperation>
                  <style/>
                </widget>
              </ifs>
              <ifs predicateExpression="aql:true">
                <widget xsi:type="properties:ButtonDescription" buttonLabelExpression="Delete Parameter">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:parameter">
                      <subModelOperations xsi:type="tool_1:RemoveElement"/>
                    </firstModelOperations>
                  </initialOperation>
                </widget>
              </ifs>
            </controls>
            <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="2"/>
          </controls>
          <controls xsi:type="properties:ButtonDescription" buttonLabelExpression="Add Parameter">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Parameter" referenceName="parameter" variableName="newp">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="defaultValue"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </controls>
        </controls>
        <style barStyle="SHORT_TITLE_BAR" expandedByDefault="true"/>
      </groups>
    </categories>
  </extensions>
  <extensions xsi:type="properties:ViewExtensionDescription" name="Properties">
    <categories name="Attribute">
      <pages name="Attribute" labelExpression="Attribute" domainClass="eCModel.Attribute" semanticCandidateExpression="var:self" groups="//@extensions.2/@categories.0/@groups.0 //@extensions.2/@categories.0/@groups.1 //@extensions.2/@categories.0/@groups.2 //@extensions.2/@categories.0/@groups.3"/>
      <groups name="PrimitiveTypeAttribute" labelExpression="Attribute" domainClass="eCModel.Attribute" semanticCandidateExpression="var:self" preconditionExpression="aql:self.type.oclIsTypeOf(eCModel::PrimitiveTypeCS)">
        <controls xsi:type="properties:TextDescription" name="PrimitiveAttirbuteName" labelExpression="Name:" valueExpression="feature:name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
          <style/>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="primetype" labelExpression="Type:" valueExpression="aql:self.type.name" candidatesExpression="aql:OrderedSet{'String', 'Integer', 'Real', 'Boolean', 'Date'}" candidateDisplayExpression="aql:candidate">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <style barStyle="SHORT_TITLE_BAR" expandedByDefault="true"/>
      </groups>
      <groups name="EntityTypeAttribute" labelExpression="Attribute" domainClass="eCModel.Attribute" semanticCandidateExpression="var:self" preconditionExpression="aql:self.type.oclIsTypeOf(eCModel::EntityType)">
        <controls xsi:type="properties:TextDescription" name="EntityAttirbuteName" labelExpression="Name:" valueExpression="feature:name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <controls xsi:type="properties:SelectDescription" name="primetype" labelExpression="Type:" valueExpression="aql:self.type.entity" candidatesExpression="aql:self.eResource().getContents().eContents(eCModel::Entity)" candidateDisplayExpression="aql:candidate.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="entity" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
        <style barStyle="SHORT_TITLE_BAR" expandedByDefault="true"/>
      </groups>
      <groups name="EnumTypeAttribute" labelExpression="Enum Variable" domainClass="eCModel.Attribute" semanticCandidateExpression="var:self" preconditionExpression="aql:self.type.oclIsTypeOf(eCModel::EnumEntity)">
        <controls xsi:type="properties:ContainerDescription">
          <controls xsi:type="properties:TextDescription" name="EntityAttirbuteName" labelExpression="Variable Name:" valueExpression="feature:name">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
        </controls>
        <style barStyle="SHORT_TITLE_BAR" expandedByDefault="true"/>
      </groups>
      <groups name="EnumEntityGroup" labelExpression="Enum Entity" domainClass="eCModel.EnumEntity" semanticCandidateExpression="aql:self.type">
        <controls xsi:type="properties:ContainerDescription">
          <controls xsi:type="properties:TextDescription" labelExpression="Enum Entity Name:" valueExpression="feature:name">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:ContainerDescription">
            <controls xsi:type="properties:DynamicMappingForDescription" iterator="enumitem" iterableExpression="aql:self.element" forceRefresh="true">
              <ifs predicateExpression="aql:true">
                <widget xsi:type="properties:TextDescription" name="PrimitiveAttirbuteName" labelExpression="Enum Item:" valueExpression="aql:enumitem.name">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:enumitem">
                      <subModelOperations xsi:type="tool_1:Switch">
                        <cases conditionExpression="aql:newValue.matches('^[A-Z]+')">
                          <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                            <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
                          </subModelOperations>
                        </cases>
                        <default>
                          <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="EnumName Warning">
                            <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                              <initialOperation/>
                            </buttons>
                            <page name="Default Page" labelExpression="Enum name can only contain UpperCase words [A-Z]." semanticCandidateExpression="var:self"/>
                          </subModelOperations>
                        </default>
                      </subModelOperations>
                    </firstModelOperations>
                  </initialOperation>
                  <style/>
                </widget>
              </ifs>
              <ifs predicateExpression="aql:true">
                <widget xsi:type="properties:ButtonDescription" name="DeleteEnumItem" buttonLabelExpression="Delete Parameter">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:enumitem">
                      <subModelOperations xsi:type="tool_1:RemoveElement"/>
                    </firstModelOperations>
                  </initialOperation>
                </widget>
              </ifs>
            </controls>
            <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="2"/>
          </controls>
          <controls xsi:type="properties:ButtonDescription" name="AddEnumItem" buttonLabelExpression="Add EnumItem">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.type">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.EnumItem" referenceName="element" variableName="newitem">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'ENUMITEM' + self.eContainer().element->size()"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </controls>
        </controls>
        <style barStyle="SHORT_TITLE_BAR" expandedByDefault="true"/>
      </groups>
    </categories>
    <categories name="Enum">
      <pages name="EnumPage" labelExpression="EnumItem" domainClass="eCModel::EnumItem" semanticCandidateExpression="var:self" groups="//@extensions.2/@categories.1/@groups.0"/>
      <groups name="EnumItemGroup" domainClass="eCModel.EnumItem">
        <controls xsi:type="properties:TextDescription" name="PrimitiveAttirbuteName" labelExpression="EnumItem Name:" valueExpression="aql:self.name">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:enumitem">
              <subModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql:newValue.matches('^[A-Z]+')">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
                  </subModelOperations>
                </cases>
                <default>
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="EnumName Warning">
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation/>
                    </buttons>
                    <page name="Default Page" labelExpression="Enum name can only contain UpperCase words [A-Z]." semanticCandidateExpression="var:self"/>
                  </subModelOperations>
                </default>
              </subModelOperations>
            </firstModelOperations>
          </initialOperation>
          <style/>
        </controls>
        <style barStyle="NO_TITLE" toggleStyle="NONE"/>
      </groups>
    </categories>
    <categories name="Association">
      <pages name="AssociationPage" labelExpression="Association" domainClass="eCModel::Reference" semanticCandidateExpression="var:self" groups="//@extensions.2/@categories.2/@groups.0 //@extensions.2/@categories.2/@groups.1 //@extensions.2/@categories.2/@groups.2"/>
      <groups name="AssociationGroup" labelExpression="aql: 'Assocation (' + self.eInverse()->filter(eCModel::Entity).name + '->' + self.entity.name + ')'" domainClass="eCModel::Reference" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription">
          <controls xsi:type="properties:TextDescription" name="AssocationName" labelExpression="Name:" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.name">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql:newValue.matches('^[a-zA-Z_]+[a-zA-Z0-9_]*')">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
                  </subModelOperations>
                </cases>
                <default>
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Value">
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation/>
                    </buttons>
                    <page name="InvalidWarning" labelExpression="aql: 'The input value: &quot;' + newValue + '&quot;,\n\n' + 'please do not contain blank space and special notation,\n\n' + 'only word (a-z)(A-Z), number (0-9), and underline (_) are acceptable. '" semanticCandidateExpression="var:self"/>
                  </subModelOperations>
                </default>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:SelectDescription" name="AssocationRelation" labelExpression="Relationship:" valueExpression="aql:self.type" candidatesExpression="aql:OrderedSet{'Association', 'Aggregation', 'Composition'}" candidateDisplayExpression="aql:candidate">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:SelectDescription" name="AssociationMultiplicity" labelExpression="Multiplicity:" valueExpression="aql:if self.ismultiple == false then '1' else '*' endif" candidatesExpression="aql:OrderedSet{'1', '*'}" candidateDisplayExpression="aql:candidate">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue=='1'">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="ismultiple" valueExpression="false"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue=='*'">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="ismultiple" valueExpression="true"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </controls>
        </controls>
        <style expandedByDefault="true"/>
      </groups>
      <groups name="AssociationReverseGroup" labelExpression="aql: 'Assocation (' + self.entity.name + '->' + self.eInverse()->filter(eCModel::Entity).name  + ')'" domainClass="eCModel::Reference" semanticCandidateExpression="var:self" preconditionExpression="aql: self.entity.reference->any( r | r.entity.name = self.eContainer().name).isReverseAssoication == true">
        <controls xsi:type="properties:ContainerDescription">
          <controls xsi:type="properties:TextDescription" name="eCModel::Reference name" labelExpression="Name:" isEnabledExpression="aql:self.eClass().getEStructuralFeature('name').changeable" valueExpression="aql:self.entity.reference->any( r | r.entity.name = self.eContainer().name).name">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:Switch">
                <cases conditionExpression="aql:newValue.matches('^[a-zA-Z_]+[a-zA-Z0-9_]*')">
                  <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.entity.reference->any( r | r.entity.name = self.eContainer().name)">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
                  </subModelOperations>
                </cases>
                <default>
                  <subModelOperations xsi:type="properties:DialogModelOperation" titleExpression="Invalid Value">
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation/>
                    </buttons>
                    <page name="InvalidWarning" labelExpression="aql: 'The input value: &quot;' + newValue + '&quot;,\n\n' + 'please do not contain blank space and special notation,\n\n' + 'only word (a-z)(A-Z), number (0-9), and underline (_) are acceptable. '" semanticCandidateExpression="var:self"/>
                  </subModelOperations>
                </default>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:SelectDescription" name="AssocationRelation" labelExpression="Relationship:" valueExpression="aql:self.type" candidatesExpression="aql:OrderedSet{'Association', 'Aggregation', 'Composition'}" candidateDisplayExpression="aql:candidate">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.entity.reference->any( r | r.entity.name = self.eContainer().name)">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:SelectDescription" name="AssociationMultiplicity" labelExpression="Multiplicity:" valueExpression="aql:if self.entity.reference->any( r | r.entity.name = self.eContainer().name).ismultiple == false then '1' else '*' endif" candidatesExpression="aql:OrderedSet{'1', '*'}" candidateDisplayExpression="aql:candidate">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.entity.reference->any( r | r.entity.name = self.eContainer().name)">
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue=='1'">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="ismultiple" valueExpression="false"/>
                </subModelOperations>
                <subModelOperations xsi:type="tool_1:If" conditionExpression="aql:newValue=='*'">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="ismultiple" valueExpression="true"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:CheckboxDescription" name="eCModel::Reference isReverseAssoication" labelExpression="Seperate the bi-directional assocation into two associations" valueExpression="aql:self.entity.reference->any( r|r.entity.name = self.eContainer().name).isReverseAssoication">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.entity.reference->any( r | r.entity.name = self.eContainer().name)">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="isReverseAssoication" valueExpression="aql:false"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
        </controls>
      </groups>
      <groups name="ExtraFunctionsGroup" labelExpression="Extra Functions" domainClass="eCModel::Reference" semanticCandidateExpression="var:self" preconditionExpression="aql: self.entity.reference->any( r | r.entity.name = self.eContainer().name).isReverseAssoication == false">
        <controls xsi:type="properties:ContainerDescription">
          <controls xsi:type="properties:CheckboxDescription" name="ExtractIsReverseAssoication" labelExpression="Merge this assoication with the reverse association as bi-direactional association" valueExpression="aql:self.isReverseAssoication">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="isReverseAssoication" valueExpression="var:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
          <controls xsi:type="properties:TextDescription">
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.entity.reference->any( r | r.entity.name = self.eContainer().name)">
                <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
              </firstModelOperations>
            </initialOperation>
          </controls>
        </controls>
      </groups>
    </categories>
  </extensions>
  <extensions xsi:type="properties:ViewExtensionDescription" name="sirius_default_rules_properties">
    <categories name="Default">
      <pages name="sirius_default_rules_defaultpage" labelExpression="aql:input.emfEditServices(self).getTabName()" semanticCandidateExpression="aql:input.getAllSemanticElements()" preconditionExpression="aql:not (self.oclIsTypeOf(eCModel::Attribute) or self.oclIsTypeOf(eCModel::EnumItem) or self.oclIsTypeOf(eCModel::EntityType) or self.oclIsTypeOf(eCModel::Reference) or self.oclIsTypeOf(eCModel::CallMessage) or self.oclIsTypeOf(eCModel::Service))" groups="//@extensions.3/@categories.0/@groups.0"/>
      <groups name="sirius_default_rules_defaultgroup" labelExpression="Properties" semanticCandidateExpression="var:self" preconditionExpression="">
        <controls xsi:type="properties:DynamicMappingForDescription" name="sirius_default_rules_structural_features_for" iterator="eStructuralFeature" iterableExpression="aql:input.emfEditServices(self).getEStructuralFeatures()">
          <ifs name="sirius_default_rules_mono_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and not input.emfEditServices(self).isMultiline(eStructuralFeature)">
            <widget xsi:type="properties:TextDescription" name="sirius_default_rules_mono_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql: if input.emfEditServices(self).getText(eStructuralFeature) &lt;> 'Label' then self.eGet(eStructuralFeature.name) else self.eGet(eStructuralFeature.name).substring(2,self.eGet(eStructuralFeature.name).size()-1) endif">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql: if input.emfEditServices(self).getText(eStructuralFeature) &lt;> 'Label' then input.emfEditServices(self).setValue(eStructuralFeature, newValue) else input.emfEditServices(self).setValue(eStructuralFeature, '&quot;' + newValue + '&quot;') endif"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_multi_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and input.emfEditServices(self).isMultiline(eStructuralFeature)">
            <widget xsi:type="properties:TextAreaDescription" name="sirius_default_rules_multi_string" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_mono_boolean" predicateExpression="aql:input.emfEditServices(self).needsCheckboxWidget(eStructuralFeature)">
            <widget xsi:type="properties:CheckboxDescription" name="sirius_default_rules_mono_boolean" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_enum_if" predicateExpression="aql:eStructuralFeature.eType.oclIsKindOf(ecore::EEnum) and not(eStructuralFeature.many)">
            <widget xsi:type="properties:RadioDescription" name="sirius_default_rules_enum" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).getEEnumLiteralByLiteral(self.eGet(eStructuralFeature.name).toString())" candidatesExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).eLiterals" candidateDisplayExpression="aql:candidate.name" numberOfColumns="5">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue.instance)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_eattribute_many_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EAttribute) and eStructuralFeature.many">
            <widget xsi:type="properties:ListDescription" name="sirius_default_rules_eattribute_many" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)" displayExpression="var:value"/>
          </ifs>
          <ifs name="sirius_default_rules_ereference_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EReference)">
            <widget xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="sirius_default_rules_ereference" labelExpression="aql:input.emfEditServices(self).getText(eStructuralFeature)+':'" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" referenceNameExpression="aql:eStructuralFeature.name"/>
          </ifs>
        </controls>
      </groups>
    </categories>
  </extensions>
  <extensions xsi:type="properties:ViewExtensionDescription" name="CombinedFragment">
    <categories name="Default Category">
      <pages name="CombinedFragment" labelExpression="CombinedFragment" domainClass="eCModel::CombinedFragment" semanticCandidateExpression="var:self" groups="//@extensions.4/@categories.0/@groups.0"/>
      <groups name="CombinedFragmentOperator" labelExpression="CombinedFragement Details" domainClass="eCModel::CombinedFragment" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:SelectDescription" name="primetype" labelExpression="Type:" valueExpression="aql:self.operator" candidatesExpression="aql:OrderedSet{'loop', 'alt'}" candidateDisplayExpression="aql:candidate">
          <initialOperation>
            <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self">
              <subModelOperations xsi:type="tool_1:SetValue" featureName="operator" valueExpression="var:newValue"/>
            </firstModelOperations>
          </initialOperation>
        </controls>
      </groups>
    </categories>
  </extensions>
  <extensions xsi:type="properties:ViewExtensionDescription" name="Service">
    <categories name="Default Category">
      <pages name="Service" labelExpression="Service" domainClass="eCModel::Service" semanticCandidateExpression="var:self" groups="//@extensions.5/@categories.0/@groups.1 //@extensions.5/@categories.0/@groups.0"/>
      <groups name="SystemOperations" labelExpression="System Operations" domainClass="eCModel::Service" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription">
          <controls xsi:type="properties:ListDescription" valueExpression="aql:self.operation" displayExpression="aql:value.name + ' ('  + value.parameter.name->sep(', ') + ')'">
            <onClickOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self"/>
            </onClickOperation>
            <style/>
          </controls>
          <layout xsi:type="properties:FillLayoutDescription"/>
        </controls>
        <style barStyle="SHORT_TITLE_BAR" expandedByDefault="true"/>
      </groups>
      <groups name="TemporaryVariables" labelExpression="Temporary Variable " domainClass="eCModel::Service" semanticCandidateExpression="var:self">
        <controls xsi:type="properties:ContainerDescription">
          <controls xsi:type="properties:ContainerDescription">
            <controls xsi:type="properties:DynamicMappingForDescription" iterator="var" iterableExpression="aql:self.temp_property" forceRefresh="true">
              <ifs predicateExpression="aql:var.type.oclIsTypeOf(eCModel::PrimitiveTypeCS)">
                <widget xsi:type="properties:TextDescription" name="TempPropertyName" labelExpression="Name:" valueExpression="aql:var.name">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:var">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
                    </firstModelOperations>
                  </initialOperation>
                  <style/>
                </widget>
              </ifs>
              <ifs predicateExpression="aql:var.type.oclIsTypeOf(eCModel::PrimitiveTypeCS)">
                <widget xsi:type="properties:SelectDescription" name="primetype" labelExpression="Type:" valueExpression="aql:var.type.name" candidatesExpression="aql:OrderedSet{'String', 'Integer', 'Real', 'Boolean', 'Date'}" candidateDisplayExpression="aql:candidate">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:var.type">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
                    </firstModelOperations>
                  </initialOperation>
                  <style/>
                </widget>
              </ifs>
              <ifs predicateExpression="aql:var.type.oclIsTypeOf(eCModel::PrimitiveTypeCS)">
                <widget xsi:type="properties:ButtonDescription" buttonLabelExpression="Delete Variable">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:var">
                      <subModelOperations xsi:type="tool_1:RemoveElement"/>
                    </firstModelOperations>
                  </initialOperation>
                </widget>
              </ifs>
            </controls>
            <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="3"/>
          </controls>
          <controls xsi:type="properties:ContainerDescription">
            <controls xsi:type="properties:DynamicMappingForDescription" iterator="var" iterableExpression="aql:self.temp_property" forceRefresh="true">
              <ifs predicateExpression="aql:var.type.oclIsTypeOf(eCModel::EntityType)">
                <widget xsi:type="properties:TextDescription" name="TempPropertyName" labelExpression="Name:" valueExpression="aql:var.name">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:var">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
                    </firstModelOperations>
                  </initialOperation>
                  <style/>
                </widget>
              </ifs>
              <ifs predicateExpression="aql:var.type.oclIsTypeOf(eCModel::EntityType)">
                <widget xsi:type="properties:SelectDescription" name="primetype" labelExpression="Type:" valueExpression="aql:var.type.entity" candidatesExpression="aql:self.eResource().getContents().eContents(eCModel::DomainModel).entity" candidateDisplayExpression="aql:candidate.name">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:var.type">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="entity" valueExpression="var:newValue"/>
                    </firstModelOperations>
                  </initialOperation>
                </widget>
              </ifs>
              <ifs predicateExpression="aql:var.type.oclIsTypeOf(eCModel::EntityType)">
                <widget xsi:type="properties:CheckboxDescription" labelExpression="isMultipe" valueExpression="aql:var.ismultiple">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:var">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="ismultiple" valueExpression="aql:newValue"/>
                    </firstModelOperations>
                  </initialOperation>
                </widget>
              </ifs>
              <ifs predicateExpression="aql:var.type.oclIsTypeOf(eCModel::EntityType)">
                <widget xsi:type="properties:ButtonDescription" buttonLabelExpression="Delete Variable">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:var">
                      <subModelOperations xsi:type="tool_1:RemoveElement"/>
                    </firstModelOperations>
                  </initialOperation>
                </widget>
              </ifs>
            </controls>
            <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="4"/>
          </controls>
          <controls xsi:type="properties:ContainerDescription">
            <controls xsi:type="properties:ButtonDescription" buttonLabelExpression="Add Primitive Variable">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Attribute" referenceName="temp_property" variableName="newAttribute">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'attribute'+self.eContainerOrSelf(eCModel::Service).temp_property->filter(eCModel::Attribute)->size()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ismultiple" valueExpression="false"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.PrimitiveTypeCS" referenceName="type" variableName="defaultType">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="String"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </controls>
            <controls xsi:type="properties:ButtonDescription" buttonLabelExpression="Add Entity Variable">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Attribute" referenceName="temp_property" variableName="newAttribute">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'attribute'+self.eContainerOrSelf(eCModel::Service).temp_property->filter(eCModel::Attribute)->size()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ismultiple" valueExpression="false"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.EntityType" referenceName="type" variableName="newEntityType">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="entity" valueExpression="aql:self.eResource().getContents().eContents(eCModel::DomainModel).entity->first()"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:newEntityType"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </controls>
            <layout xsi:type="properties:FillLayoutDescription" orientation="HORIZONTAL"/>
          </controls>
        </controls>
        <style barStyle="SHORT_TITLE_BAR" expandedByDefault="true"/>
      </groups>
    </categories>
  </extensions>
  <extensions xsi:type="properties:ViewExtensionDescription" name="SystemService">
    <categories name="Default Category">
      <pages name="Default Page" labelExpression="Page" domainClass="eCModel::UseCaseModel" semanticCandidateExpression="var:self" groups="//@extensions.6/@categories.0/@groups.0"/>
      <groups name="Default Group" labelExpression="Group" semanticCandidateExpression="var:self"/>
      <groups name="SystemTemporaryVariables" labelExpression="Temporary Variable " domainClass="eCModel::Service" semanticCandidateExpression="aql:self.service->any(s|s.name.contains('System'))">
        <controls xsi:type="properties:ContainerDescription">
          <controls xsi:type="properties:ContainerDescription">
            <controls xsi:type="properties:DynamicMappingForDescription" iterator="var" iterableExpression="aql:self.temp_property" forceRefresh="true">
              <ifs predicateExpression="aql:var.type.oclIsTypeOf(eCModel::PrimitiveTypeCS)">
                <widget xsi:type="properties:TextDescription" name="TempPropertyName" labelExpression="Name:" valueExpression="aql:var.name">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:var">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
                    </firstModelOperations>
                  </initialOperation>
                  <style/>
                </widget>
              </ifs>
              <ifs predicateExpression="aql:var.type.oclIsTypeOf(eCModel::PrimitiveTypeCS)">
                <widget xsi:type="properties:SelectDescription" name="primetype" labelExpression="Type:" valueExpression="aql:var.type.name" candidatesExpression="aql:OrderedSet{'String', 'Integer', 'Real', 'Boolean', 'Date'}" candidateDisplayExpression="aql:candidate">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:var.type">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
                    </firstModelOperations>
                  </initialOperation>
                  <style/>
                </widget>
              </ifs>
              <ifs predicateExpression="aql:var.type.oclIsTypeOf(eCModel::PrimitiveTypeCS)">
                <widget xsi:type="properties:ButtonDescription" buttonLabelExpression="Delete Variable">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:var">
                      <subModelOperations xsi:type="tool_1:RemoveElement"/>
                    </firstModelOperations>
                  </initialOperation>
                </widget>
              </ifs>
            </controls>
            <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="3"/>
          </controls>
          <controls xsi:type="properties:ContainerDescription">
            <controls xsi:type="properties:DynamicMappingForDescription" iterator="var" iterableExpression="aql:self.temp_property" forceRefresh="true">
              <ifs predicateExpression="aql:var.type.oclIsTypeOf(eCModel::EntityType)">
                <widget xsi:type="properties:TextDescription" name="TempPropertyName" labelExpression="Name:" valueExpression="aql:var.name">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:var">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="var:newValue"/>
                    </firstModelOperations>
                  </initialOperation>
                  <style/>
                </widget>
              </ifs>
              <ifs predicateExpression="aql:var.type.oclIsTypeOf(eCModel::EntityType)">
                <widget xsi:type="properties:SelectDescription" name="primetype" labelExpression="Type:" valueExpression="aql:var.type.entity" candidatesExpression="aql:self.eResource().getContents().eContents(eCModel::DomainModel).entity" candidateDisplayExpression="aql:candidate.name">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:var.type">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="entity" valueExpression="var:newValue"/>
                    </firstModelOperations>
                  </initialOperation>
                </widget>
              </ifs>
              <ifs predicateExpression="aql:var.type.oclIsTypeOf(eCModel::EntityType)">
                <widget xsi:type="properties:CheckboxDescription" labelExpression="isMultipe" valueExpression="aql:var.ismultiple">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:var">
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="ismultiple" valueExpression="aql:newValue"/>
                    </firstModelOperations>
                  </initialOperation>
                </widget>
              </ifs>
              <ifs predicateExpression="aql:var.type.oclIsTypeOf(eCModel::EntityType)">
                <widget xsi:type="properties:ButtonDescription" buttonLabelExpression="Delete Variable">
                  <initialOperation>
                    <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:var">
                      <subModelOperations xsi:type="tool_1:RemoveElement"/>
                    </firstModelOperations>
                  </initialOperation>
                </widget>
              </ifs>
            </controls>
            <layout xsi:type="properties:GridLayoutDescription" numberOfColumns="4"/>
          </controls>
          <controls xsi:type="properties:ContainerDescription">
            <controls xsi:type="properties:ButtonDescription" buttonLabelExpression="Add Primitive Variable">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Attribute" referenceName="temp_property" variableName="newAttribute">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'attribute'+self.eContainerOrSelf(eCModel::Service).temp_property->filter(eCModel::Attribute)->size()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ismultiple" valueExpression="false"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.PrimitiveTypeCS" referenceName="type" variableName="defaultType">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="String"/>
                      </subModelOperations>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </controls>
            <controls xsi:type="properties:ButtonDescription" buttonLabelExpression="Add Entity Variable">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                  <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.Attribute" referenceName="temp_property" variableName="newAttribute">
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="name" valueExpression="aql:'attribute'+self.eContainerOrSelf(eCModel::Service).temp_property->filter(eCModel::Attribute)->size()"/>
                    <subModelOperations xsi:type="tool_1:SetValue" featureName="ismultiple" valueExpression="false"/>
                    <subModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:self">
                      <subModelOperations xsi:type="tool_1:CreateInstance" typeName="eCModel.EntityType" referenceName="type" variableName="newEntityType">
                        <subModelOperations xsi:type="tool_1:SetValue" featureName="entity" valueExpression="aql:self.eResource().getContents().eContents(eCModel::DomainModel).entity->first()"/>
                      </subModelOperations>
                      <subModelOperations xsi:type="tool_1:SetValue" featureName="type" valueExpression="var:newEntityType"/>
                    </subModelOperations>
                  </subModelOperations>
                </firstModelOperations>
              </initialOperation>
            </controls>
            <layout xsi:type="properties:FillLayoutDescription" orientation="HORIZONTAL"/>
          </controls>
        </controls>
        <style barStyle="SHORT_TITLE_BAR" expandedByDefault="true"/>
      </groups>
    </categories>
  </extensions>
</description:Group>
